import{_ as s,c as n,o as a,U as l}from"./chunks/framework.29dee80d.js";const u=JSON.parse('{"title":"完整代码","description":"","frontmatter":{},"headers":[],"relativePath":"server/transformRequest.md","lastUpdated":1684400797000}'),p={name:"server/transformRequest.md"},o=l(`<h1 id="完整代码" tabindex="-1">完整代码 <a class="header-anchor" href="#完整代码" aria-label="Permalink to &quot;完整代码&quot;">​</a></h1><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;node:path&#39;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">promises</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">fs</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;node:fs&#39;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">ExistingRawSourceMap</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">SourceMap</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;rollup&#39;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">Logger</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;../logger&#39;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">createDebugger</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;../utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">debug</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">createDebugger</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;vite:sourcemap&#39;</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">onlyWhenFocused</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Virtual modules should be prefixed with a null byte to avoid a</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// false positive &quot;missing source&quot; warning. We also check for certain</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// prefixes used for special handling in esbuildDepPlugin.</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">virtualSourceRE</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> /</span><span style="color:#C678DD;">^</span><span style="color:#E06C75;">(?:dep:</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">browser-external:</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">virtual:)</span><span style="color:#ABB2BF;">|</span><span style="color:#56B6C2;">\\0</span><span style="color:#E06C75;">/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">interface</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">SourceMapLike</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">sources</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">[]</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">sourcesContent</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: (</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">null</span><span style="color:#ABB2BF;">)[]</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">sourceRoot</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">async</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">injectSourcesContent</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;font-style:italic;">map</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">SourceMapLike</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;font-style:italic;">file</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;font-style:italic;">logger</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Logger</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">Promise</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">void</span><span style="color:#ABB2BF;">&gt; {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">let</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">sourceRoot</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">undefined</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">// The source root is undefined for virtual modules and permission errors.</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">sourceRoot</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">await</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">realpath</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">dirname</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">file</span><span style="color:#ABB2BF;">), </span><span style="color:#E5C07B;">map</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">sourceRoot</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">||</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;&#39;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">    )</span></span>
<span class="line"><span style="color:#ABB2BF;">  } </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">missingSources</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">[] </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> []</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">map</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">sourcesContent</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">await</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Promise</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">all</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">map</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">sources</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">map</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">sourcePath</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">sourcePath</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">!</span><span style="color:#E5C07B;">virtualSourceRE</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">sourcePath</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E06C75;">sourcePath</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">decodeURI</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">sourcePath</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">sourceRoot</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#E06C75;">sourcePath</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">sourceRoot</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">sourcePath</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">readFile</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">sourcePath</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;utf-8&#39;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">catch</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#E5C07B;">missingSources</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">sourcePath</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">null</span></span>
<span class="line"><span style="color:#ABB2BF;">        })</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">null</span></span>
<span class="line"><span style="color:#ABB2BF;">    }),</span></span>
<span class="line"><span style="color:#ABB2BF;">  )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// Use this command…</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">//    DEBUG=&quot;vite:sourcemap&quot; vite build</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// …to log the missing sources.</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">missingSources</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">logger</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">warnOnce</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`Sourcemap for &quot;</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">file</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">&quot; points to missing source files\`</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">debug</span><span style="color:#ABB2BF;">?.(</span><span style="color:#98C379;">\`Missing sources:</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">  \`</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">missingSources</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">  \`</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">genSourceMapUrl</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">map</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">SourceMap</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">map</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">!==</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;string&#39;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">map</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">stringify</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">map</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">\`data:application/json;base64,</span><span style="color:#C678DD;">\${</span><span style="color:#E5C07B;">Buffer</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">from</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">map</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">toString</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;base64&#39;</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">getCodeWithSourcemap</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;font-style:italic;">type</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;js&#39;</span><span style="color:#ABB2BF;"> | </span><span style="color:#98C379;">&#39;css&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;font-style:italic;">code</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;font-style:italic;">map</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">SourceMap</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">debug</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">code</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">\`</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">/*</span><span style="color:#C678DD;">\${</span><span style="color:#E5C07B;">JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">stringify</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">map</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">replace</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/</span><span style="color:#56B6C2;">\\*\\/</span><span style="color:#E06C75;">/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;*</span><span style="color:#56B6C2;">\\\\</span><span style="color:#98C379;">/&#39;</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">*/</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">\`</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;js&#39;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">code</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">\`</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">//# sourceMappingURL=</span><span style="color:#C678DD;">\${</span><span style="color:#61AFEF;">genSourceMapUrl</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">map</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span></span>
<span class="line"><span style="color:#ABB2BF;">  } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;css&#39;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">code</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">\`</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">/*# sourceMappingURL=</span><span style="color:#C678DD;">\${</span><span style="color:#61AFEF;">genSourceMapUrl</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">map</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;">}</span><span style="color:#98C379;"> */\`</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">code</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">applySourcemapIgnoreList</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;font-style:italic;">map</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">ExistingRawSourceMap</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;font-style:italic;">sourcemapPath</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#61AFEF;">sourcemapIgnoreList</span><span style="color:#ABB2BF;">: (</span><span style="color:#E06C75;font-style:italic;">sourcePath</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">sourcemapPath</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;font-style:italic;">logger</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Logger</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">void</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">let</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">x_google_ignoreList</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">map</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">x_google_ignoreList</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">undefined</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">x_google_ignoreList</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> []</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">let</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">sourcesIndex</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">sourcesIndex</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">map</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">sources</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#56B6C2;">++</span><span style="color:#E06C75;">sourcesIndex</span></span>
<span class="line"><span style="color:#ABB2BF;">  ) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">sourcePath</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">map</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">sources</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">sourcesIndex</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E06C75;">sourcePath</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">continue</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">ignoreList</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">sourcemapIgnoreList</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">isAbsolute</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">sourcePath</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">sourcePath</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">dirname</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">sourcemapPath</span><span style="color:#ABB2BF;">), </span><span style="color:#E06C75;">sourcePath</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">sourcemapPath</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    )</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">logger</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">ignoreList</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">!==</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;boolean&#39;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E5C07B;">logger</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">warn</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;sourcemapIgnoreList function must return a boolean.&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">ignoreList</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">!</span><span style="color:#E5C07B;">x_google_ignoreList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">includes</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">sourcesIndex</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E5C07B;">x_google_ignoreList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">sourcesIndex</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">x_google_ignoreList</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E5C07B;">map</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">x_google_ignoreList</span><span style="color:#ABB2BF;">) </span><span style="color:#E5C07B;">map</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">x_google_ignoreList</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">x_google_ignoreList</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> path </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;node:path&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> { promises </span><span style="color:#F97583;">as</span><span style="color:#B392F0;"> fs } </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;node:fs&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">type</span><span style="color:#B392F0;"> { ExistingRawSourceMap</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> SourceMap } </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;rollup&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">type</span><span style="color:#B392F0;"> { Logger } </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;../logger&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> { createDebugger } </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;../utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">debug</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> createDebugger(</span><span style="color:#FFAB70;">&#39;vite:sourcemap&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  onlyWhenFocused</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">true</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// Virtual modules should be prefixed with a null byte to avoid a</span></span>
<span class="line"><span style="color:#6B737C;">// false positive &quot;missing source&quot; warning. We also check for certain</span></span>
<span class="line"><span style="color:#6B737C;">// prefixes used for special handling in esbuildDepPlugin.</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">virtualSourceRE</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#FFAB70;"> /</span><span style="color:#F97583;">^</span><span style="color:#FFAB70;">(?:dep:</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">browser-external:</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">virtual:)</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">\\0/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> SourceMapLike {</span></span>
<span class="line"><span style="color:#B392F0;">  sources</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">[]</span></span>
<span class="line"><span style="color:#B392F0;">  sourcesContent</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> (</span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">null</span><span style="color:#B392F0;">)[]</span></span>
<span class="line"><span style="color:#B392F0;">  sourceRoot</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">async</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> injectSourcesContent(</span></span>
<span class="line"><span style="color:#B392F0;">  map</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> SourceMapLike</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  file</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  logger</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Logger</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Promise&lt;</span><span style="color:#79B8FF;">void</span><span style="color:#B392F0;">&gt; {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">let</span><span style="color:#B392F0;"> sourceRoot</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">undefined</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">try</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#6B737C;">// The source root is undefined for virtual modules and permission errors.</span></span>
<span class="line"><span style="color:#B392F0;">    sourceRoot </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">await</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">fs</span><span style="color:#B392F0;">.realpath(</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#79B8FF;">path</span><span style="color:#B392F0;">.resolve(</span><span style="color:#79B8FF;">path</span><span style="color:#B392F0;">.dirname(file)</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">map</span><span style="color:#B392F0;">.sourceRoot </span><span style="color:#F97583;">||</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;&#39;</span><span style="color:#B392F0;">)</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">    )</span></span>
<span class="line"><span style="color:#B392F0;">  } </span><span style="color:#F97583;">catch</span><span style="color:#B392F0;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">missingSources</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">[] </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> []</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">map</span><span style="color:#B392F0;">.sourcesContent </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">await</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">Promise</span><span style="color:#B392F0;">.all(</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#79B8FF;">map</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">sources</span><span style="color:#B392F0;">.map((sourcePath) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (sourcePath </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">!</span><span style="color:#79B8FF;">virtualSourceRE</span><span style="color:#B392F0;">.test(sourcePath)) {</span></span>
<span class="line"><span style="color:#B392F0;">        sourcePath </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> decodeURI(sourcePath)</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (sourceRoot) {</span></span>
<span class="line"><span style="color:#B392F0;">          sourcePath </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">path</span><span style="color:#B392F0;">.resolve(sourceRoot</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> sourcePath)</span></span>
<span class="line"><span style="color:#B392F0;">        }</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">fs</span><span style="color:#B392F0;">.readFile(sourcePath</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;utf-8&#39;</span><span style="color:#B392F0;">).catch(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">          </span><span style="color:#79B8FF;">missingSources</span><span style="color:#B392F0;">.push(sourcePath)</span></span>
<span class="line"><span style="color:#B392F0;">          </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">null</span></span>
<span class="line"><span style="color:#B392F0;">        })</span></span>
<span class="line"><span style="color:#B392F0;">      }</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">null</span></span>
<span class="line"><span style="color:#B392F0;">    })</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// Use this command…</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">//    DEBUG=&quot;vite:sourcemap&quot; vite build</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// …to log the missing sources.</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (</span><span style="color:#79B8FF;">missingSources</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">length</span><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#79B8FF;">logger</span><span style="color:#B392F0;">.warnOnce(</span><span style="color:#FFAB70;">\`Sourcemap for &quot;</span><span style="color:#F97583;">\${</span><span style="color:#B392F0;">file</span><span style="color:#F97583;">}</span><span style="color:#FFAB70;">&quot; points to missing source files\`</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">    debug?.(</span><span style="color:#FFAB70;">\`Missing sources:\\n  \`</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">+</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">missingSources</span><span style="color:#B392F0;">.join(</span><span style="color:#FFAB70;">\`\\n  \`</span><span style="color:#B392F0;">))</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> genSourceMapUrl(map</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> SourceMap </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (</span><span style="color:#F97583;">typeof</span><span style="color:#B392F0;"> map </span><span style="color:#F97583;">!==</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;string&#39;</span><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">    map </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">JSON</span><span style="color:#B392F0;">.stringify(map)</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">\`data:application/json;base64,</span><span style="color:#F97583;">\${</span><span style="color:#79B8FF;">Buffer</span><span style="color:#B392F0;">.from(map).toString(</span><span style="color:#FFAB70;">&#39;base64&#39;</span><span style="color:#B392F0;">)</span><span style="color:#F97583;">}</span><span style="color:#FFAB70;">\`</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> getCodeWithSourcemap(</span></span>
<span class="line"><span style="color:#B392F0;">  type</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;js&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;css&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  code</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  map</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> SourceMap</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (debug) {</span></span>
<span class="line"><span style="color:#B392F0;">    code </span><span style="color:#F97583;">+=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">\`\\n/*</span><span style="color:#F97583;">\${</span><span style="color:#79B8FF;">JSON</span><span style="color:#B392F0;">.stringify(map</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">null</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">2</span><span style="color:#B392F0;">).replace(</span><span style="color:#FFAB70;">/\\*\\//</span><span style="color:#F97583;">g</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;*\\\\/&#39;</span><span style="color:#B392F0;">)</span><span style="color:#F97583;">}</span><span style="color:#FFAB70;">*/\\n\`</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (type </span><span style="color:#F97583;">===</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;js&#39;</span><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">    code </span><span style="color:#F97583;">+=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">\`\\n//# sourceMappingURL=</span><span style="color:#F97583;">\${</span><span style="color:#B392F0;">genSourceMapUrl(map)</span><span style="color:#F97583;">}</span><span style="color:#FFAB70;">\`</span></span>
<span class="line"><span style="color:#B392F0;">  } </span><span style="color:#F97583;">else</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (type </span><span style="color:#F97583;">===</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;css&#39;</span><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">    code </span><span style="color:#F97583;">+=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">\`\\n/*# sourceMappingURL=</span><span style="color:#F97583;">\${</span><span style="color:#B392F0;">genSourceMapUrl(map)</span><span style="color:#F97583;">}</span><span style="color:#FFAB70;"> */\`</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> code</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> applySourcemapIgnoreList(</span></span>
<span class="line"><span style="color:#B392F0;">  map</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> ExistingRawSourceMap</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  sourcemapPath</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  sourcemapIgnoreList</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> (sourcePath</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> sourcemapPath</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  logger</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> Logger</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">void</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">let</span><span style="color:#B392F0;"> { x_google_ignoreList } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> map</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (x_google_ignoreList </span><span style="color:#F97583;">===</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">    x_google_ignoreList </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> []</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">for</span><span style="color:#B392F0;"> (</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">let</span><span style="color:#B392F0;"> sourcesIndex </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">0</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">    sourcesIndex </span><span style="color:#F97583;">&lt;</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">map</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">sources</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">length</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">++</span><span style="color:#B392F0;">sourcesIndex</span></span>
<span class="line"><span style="color:#B392F0;">  ) {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">sourcePath</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">map</span><span style="color:#B392F0;">.sources[sourcesIndex]</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (</span><span style="color:#F97583;">!</span><span style="color:#B392F0;">sourcePath) </span><span style="color:#F97583;">continue</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">ignoreList</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> sourcemapIgnoreList(</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#79B8FF;">path</span><span style="color:#B392F0;">.isAbsolute(sourcePath)</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> sourcePath</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">path</span><span style="color:#B392F0;">.resolve(</span><span style="color:#79B8FF;">path</span><span style="color:#B392F0;">.dirname(sourcemapPath)</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> sourcePath)</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">      sourcemapPath</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">    )</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (logger </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">typeof</span><span style="color:#B392F0;"> ignoreList </span><span style="color:#F97583;">!==</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;boolean&#39;</span><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#79B8FF;">logger</span><span style="color:#B392F0;">.warn(</span><span style="color:#FFAB70;">&#39;sourcemapIgnoreList function must return a boolean.&#39;</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (ignoreList </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">!</span><span style="color:#79B8FF;">x_google_ignoreList</span><span style="color:#B392F0;">.includes(sourcesIndex)) {</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#79B8FF;">x_google_ignoreList</span><span style="color:#B392F0;">.push(sourcesIndex)</span></span>
<span class="line"><span style="color:#B392F0;">    }</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (</span><span style="color:#79B8FF;">x_google_ignoreList</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">length</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">0</span><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (</span><span style="color:#F97583;">!</span><span style="color:#79B8FF;">map</span><span style="color:#B392F0;">.x_google_ignoreList) </span><span style="color:#79B8FF;">map</span><span style="color:#B392F0;">.x_google_ignoreList </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> x_google_ignoreList</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br></div></div><h2 id="什么是sourcemap" tabindex="-1">什么是sourceMap <a class="header-anchor" href="#什么是sourcemap" aria-label="Permalink to &quot;什么是sourceMap&quot;">​</a></h2><p>source-map是一个用于调试JavaScript代码的技术，它可以将经过压缩的JavaScript代码映射回其原始源代码的位置。在开发大型JavaScript应用程序时，使用source-map可以帮助开发人员更快地调试代码并定位其中的错误。</p><h2 id="transformrequest" tabindex="-1">transformRequest <a class="header-anchor" href="#transformrequest" aria-label="Permalink to &quot;transformRequest&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">transformRequest</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;font-style:italic;">url</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;font-style:italic;">server</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">ViteDevServer</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;font-style:italic;">options</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">TransformOptions</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {},</span></span>
<span class="line"><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">Promise</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">TransformResult</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">null</span><span style="color:#ABB2BF;">&gt; {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">cacheKey</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">options</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">ssr</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;ssr:&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">options</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;html:&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">url</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// This module may get invalidated while we are processing it. For example</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// when a full page reload is needed after the re-processing of pre-bundled</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// dependencies when a missing dep is discovered. We save the current time</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// to compare it to the last invalidation performed to know if we should</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// cache the result of the transformation or we should discard it as stale.</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">//</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// A module can be invalidated due to:</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 1. A full reload because of pre-bundling newly discovered deps</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 2. A full reload after a config change</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 3. The file that generated the module changed</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 4. Invalidation for a virtual module</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">//</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// For 1 and 2, a new request for this module will be issued after</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// the invalidation as part of the browser reloading the page. For 3 and 4</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// there may not be a new request right away because of HMR handling.</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// In all cases, the next time this module is requested, it should be</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// re-processed.</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">//</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// We save the timestamp when we start processing and compare it with the</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// last time this module is invalidated</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">timestamp</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Date</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">now</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">pending</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">server</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">_pendingRequests</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">cacheKey</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">pending</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">server</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">moduleGraph</span></span>
<span class="line"><span style="color:#ABB2BF;">      .</span><span style="color:#61AFEF;">getModuleByUrl</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">removeTimestampQuery</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;">), </span><span style="color:#E5C07B;">options</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">ssr</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">      .</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">module</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">||</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">pending</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">timestamp</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">lastInvalidationTimestamp</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#7F848E;font-style:italic;">// The pending request is still valid, we can safely reuse its result</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">pending</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">request</span></span>
<span class="line"><span style="color:#ABB2BF;">        } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#7F848E;font-style:italic;">// Request 1 for module A     (pending.timestamp)</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#7F848E;font-style:italic;">// Invalidate module A        (module.lastInvalidationTimestamp)</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#7F848E;font-style:italic;">// Request 2 for module A     (timestamp)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#7F848E;font-style:italic;">// First request has been invalidated, abort it to clear the cache,</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#7F848E;font-style:italic;">// then perform a new doTransform.</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#E5C07B;">pending</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">abort</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">transformRequest</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">server</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">options</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">      })</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">request</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">doTransform</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">server</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">options</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">timestamp</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// Avoid clearing the cache of future requests if aborted</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">let</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">cleared</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">false</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">clearCache</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E06C75;">cleared</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E5C07B;">server</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">_pendingRequests</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">delete</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">cacheKey</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">cleared</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">true</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// Cache the request and clear it once processing is done</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">server</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">_pendingRequests</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">set</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">cacheKey</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">request</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">timestamp</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">abort</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">clearCache</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  })</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">request</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">clearCache</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">clearCache</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">request</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> transformRequest(</span></span>
<span class="line"><span style="color:#B392F0;">  url</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  server</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> ViteDevServer</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  options</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> TransformOptions </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> {}</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Promise&lt;TransformResult </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">null</span><span style="color:#B392F0;">&gt; {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">cacheKey</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> (</span><span style="color:#79B8FF;">options</span><span style="color:#B392F0;">.ssr </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;ssr:&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">options</span><span style="color:#B392F0;">.html </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;html:&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;&#39;</span><span style="color:#B392F0;">) </span><span style="color:#F97583;">+</span><span style="color:#B392F0;"> url</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// This module may get invalidated while we are processing it. For example</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// when a full page reload is needed after the re-processing of pre-bundled</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// dependencies when a missing dep is discovered. We save the current time</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// to compare it to the last invalidation performed to know if we should</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// cache the result of the transformation or we should discard it as stale.</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">//</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// A module can be invalidated due to:</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// 1. A full reload because of pre-bundling newly discovered deps</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// 2. A full reload after a config change</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// 3. The file that generated the module changed</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// 4. Invalidation for a virtual module</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">//</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// For 1 and 2, a new request for this module will be issued after</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// the invalidation as part of the browser reloading the page. For 3 and 4</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// there may not be a new request right away because of HMR handling.</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// In all cases, the next time this module is requested, it should be</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// re-processed.</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">//</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// We save the timestamp when we start processing and compare it with the</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// last time this module is invalidated</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">timestamp</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">Date</span><span style="color:#B392F0;">.now()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">pending</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">server</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">_pendingRequests</span><span style="color:#B392F0;">.get(cacheKey)</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (pending) {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">server</span><span style="color:#B392F0;">.moduleGraph</span></span>
<span class="line"><span style="color:#B392F0;">      .getModuleByUrl(removeTimestampQuery(url)</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">options</span><span style="color:#B392F0;">.ssr)</span></span>
<span class="line"><span style="color:#B392F0;">      .then((module) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (</span><span style="color:#F97583;">!</span><span style="color:#79B8FF;">module</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">||</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">pending</span><span style="color:#B392F0;">.timestamp </span><span style="color:#F97583;">&gt;</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">module</span><span style="color:#B392F0;">.lastInvalidationTimestamp) {</span></span>
<span class="line"><span style="color:#B392F0;">          </span><span style="color:#6B737C;">// The pending request is still valid, we can safely reuse its result</span></span>
<span class="line"><span style="color:#B392F0;">          </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">pending</span><span style="color:#B392F0;">.request</span></span>
<span class="line"><span style="color:#B392F0;">        } </span><span style="color:#F97583;">else</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">          </span><span style="color:#6B737C;">// Request 1 for module A     (pending.timestamp)</span></span>
<span class="line"><span style="color:#B392F0;">          </span><span style="color:#6B737C;">// Invalidate module A        (module.lastInvalidationTimestamp)</span></span>
<span class="line"><span style="color:#B392F0;">          </span><span style="color:#6B737C;">// Request 2 for module A     (timestamp)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">          </span><span style="color:#6B737C;">// First request has been invalidated, abort it to clear the cache,</span></span>
<span class="line"><span style="color:#B392F0;">          </span><span style="color:#6B737C;">// then perform a new doTransform.</span></span>
<span class="line"><span style="color:#B392F0;">          </span><span style="color:#79B8FF;">pending</span><span style="color:#B392F0;">.abort()</span></span>
<span class="line"><span style="color:#B392F0;">          </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> transformRequest(url</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> server</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> options)</span></span>
<span class="line"><span style="color:#B392F0;">        }</span></span>
<span class="line"><span style="color:#B392F0;">      })</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">request</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> doTransform(url</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> server</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> options</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> timestamp)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// Avoid clearing the cache of future requests if aborted</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">let</span><span style="color:#B392F0;"> cleared </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> clearCache </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (</span><span style="color:#F97583;">!</span><span style="color:#B392F0;">cleared) {</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#79B8FF;">server</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">_pendingRequests</span><span style="color:#B392F0;">.delete(cacheKey)</span></span>
<span class="line"><span style="color:#B392F0;">      cleared </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#B392F0;">    }</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// Cache the request and clear it once processing is done</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">server</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">_pendingRequests</span><span style="color:#B392F0;">.set(cacheKey</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">    request</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">    timestamp</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">    abort</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> clearCache</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  })</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">request</span><span style="color:#B392F0;">.then(clearCache</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> clearCache)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> request</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br></div></div><h2 id="dotransform" tabindex="-1">doTransform <a class="header-anchor" href="#dotransform" aria-label="Permalink to &quot;doTransform&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#C678DD;">async</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">doTransform</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;font-style:italic;">url</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;font-style:italic;">server</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">ViteDevServer</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;font-style:italic;">options</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">TransformOptions</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;font-style:italic;">timestamp</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">removeTimestampQuery</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">config</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">pluginContainer</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">server</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">prettyUrl</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">debugCache</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">prettifyUrl</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">config</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">root</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">ssr</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">!!</span><span style="color:#E5C07B;">options</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">ssr</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">await</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">server</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">moduleGraph</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getModuleByUrl</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">ssr</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// check if we have a fresh cache</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">cached</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">ssr</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">ssrTransformResult</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">transformResult</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">cached</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">// TODO: check if the module is &quot;partially invalidated&quot; - i.e. an import</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">// down the chain has been fully invalidated, but this current module&#39;s</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">// content has not changed.</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">// in this case, we can reuse its previous cached result and only update</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">// its import timestamps.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">debugCache</span><span style="color:#ABB2BF;">?.(</span><span style="color:#98C379;">\`[memory] </span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">prettyUrl</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">cached</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// resolve</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">id</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">?.</span><span style="color:#E5C07B;">id</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">??</span></span>
<span class="line"><span style="color:#ABB2BF;">    (</span><span style="color:#C678DD;">await</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">pluginContainer</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolveId</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">undefined</span><span style="color:#ABB2BF;">, { </span><span style="color:#E06C75;">ssr</span><span style="color:#ABB2BF;"> }))?.</span><span style="color:#E06C75;">id</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">??</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">url</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">result</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">loadAndTransform</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">id</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">server</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">options</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">timestamp</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#61AFEF;">getDepsOptimizer</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">config</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">ssr</span><span style="color:#ABB2BF;">)?.</span><span style="color:#61AFEF;">delayDepsOptimizerUntil</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">id</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">result</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">result</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light"><code><span class="line"><span style="color:#F97583;">async</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> doTransform(</span></span>
<span class="line"><span style="color:#B392F0;">  url</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  server</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> ViteDevServer</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  options</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> TransformOptions</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  timestamp</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">  url </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> removeTimestampQuery(url)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> { </span><span style="color:#79B8FF;">config</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">pluginContainer</span><span style="color:#B392F0;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> server</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">prettyUrl</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> debugCache </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> prettifyUrl(url</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">config</span><span style="color:#B392F0;">.root) </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;&#39;</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">ssr</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">!!</span><span style="color:#79B8FF;">options</span><span style="color:#B392F0;">.ssr</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">module</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">await</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">server</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">moduleGraph</span><span style="color:#B392F0;">.getModuleByUrl(url</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> ssr)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// check if we have a fresh cache</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">cached</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#79B8FF;">module</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#B392F0;"> (ssr </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">module</span><span style="color:#B392F0;">.ssrTransformResult </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">module</span><span style="color:#B392F0;">.transformResult)</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (cached) {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#6B737C;">// TODO: check if the module is &quot;partially invalidated&quot; - i.e. an import</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#6B737C;">// down the chain has been fully invalidated, but this current module&#39;s</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#6B737C;">// content has not changed.</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#6B737C;">// in this case, we can reuse its previous cached result and only update</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#6B737C;">// its import timestamps.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">    debugCache?.(</span><span style="color:#FFAB70;">\`[memory] </span><span style="color:#F97583;">\${</span><span style="color:#B392F0;">prettyUrl</span><span style="color:#F97583;">}</span><span style="color:#FFAB70;">\`</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> cached</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// resolve</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">id</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#79B8FF;">module</span><span style="color:#B392F0;">?.</span><span style="color:#79B8FF;">id</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">??</span></span>
<span class="line"><span style="color:#B392F0;">    (</span><span style="color:#F97583;">await</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">pluginContainer</span><span style="color:#B392F0;">.resolveId(url</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> { ssr }))?.id </span><span style="color:#F97583;">??</span></span>
<span class="line"><span style="color:#B392F0;">    url</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">result</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> loadAndTransform(id</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> url</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> server</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> options</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> timestamp)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  getDepsOptimizer(config</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> ssr)?.delayDepsOptimizerUntil(id</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> result)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> result</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><h2 id="loadandtransform" tabindex="-1">loadAndTransform <a class="header-anchor" href="#loadandtransform" aria-label="Permalink to &quot;loadAndTransform&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">code</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;">try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#61AFEF;">map</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#E5C07B;">convertSourceMap</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fromSource</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">code</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">||</span></span>
<span class="line"><span style="color:#ABB2BF;">          (</span><span style="color:#C678DD;">await</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">convertSourceMap</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fromMapFileSource</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E06C75;">code</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#61AFEF;">createConvertSourceMapReadMap</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">file</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">          ))</span></span>
<span class="line"><span style="color:#ABB2BF;">        )?.</span><span style="color:#61AFEF;">toObject</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E06C75;">code</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">code</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">replace</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">convertSourceMap</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">mapFileCommentRegex</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">blankReplacer</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">      } </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">e</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">logger</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">warn</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`Failed to load source map for </span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">url</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">.\`</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#E06C75;">timestamp</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        })</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light"><code><span class="line"><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (code) {</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#F97583;">try</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">        map </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> (</span></span>
<span class="line"><span style="color:#B392F0;">          </span><span style="color:#79B8FF;">convertSourceMap</span><span style="color:#B392F0;">.fromSource(code) </span><span style="color:#F97583;">||</span></span>
<span class="line"><span style="color:#B392F0;">          (</span><span style="color:#F97583;">await</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">convertSourceMap</span><span style="color:#B392F0;">.fromMapFileSource(</span></span>
<span class="line"><span style="color:#B392F0;">            code</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">            createConvertSourceMapReadMap(file)</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">          ))</span></span>
<span class="line"><span style="color:#B392F0;">        )?.toObject()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">        code </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">code</span><span style="color:#B392F0;">.replace(</span><span style="color:#79B8FF;">convertSourceMap</span><span style="color:#B392F0;">.mapFileCommentRegex</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> blankReplacer)</span></span>
<span class="line"><span style="color:#B392F0;">      } </span><span style="color:#F97583;">catch</span><span style="color:#B392F0;"> (e) {</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#79B8FF;">logger</span><span style="color:#B392F0;">.warn(</span><span style="color:#FFAB70;">\`Failed to load source map for </span><span style="color:#F97583;">\${</span><span style="color:#B392F0;">url</span><span style="color:#F97583;">}</span><span style="color:#FFAB70;">.\`</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">          timestamp</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">true</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">        })</span></span>
<span class="line"><span style="color:#B392F0;">      }</span></span>
<span class="line"><span style="color:#B392F0;">    }</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>这段代码首先判断变量 <code>code</code> 是否有值，如果有，则尝试从该代码中提取源映射信息并将其转换为 JavaScript 对象。</p><p>具体而言，它会先尝试调用 <code>convertSourceMap.fromSource(code)</code> 方法，该方法会尝试从 <code>code</code> 中提取源映射信息，如果提取成功，则返回一个 <code>SourceMapGenerator</code> 对象。如果提取失败，则继续尝试调用 <code>convertSourceMap.fromMapFileSource(code, createConvertSourceMapReadMap(file))</code> 方法，该方法会尝试从 <code>code</code> 中提取映射文件的路径，并读取该路径下的映射文件，将其解析为 JavaScript 对象并返回。如果两个方法都无法提取源映射信息，则变量 <code>map</code> 的值为 <code>undefined</code>。</p><p>如果成功提取了源映射信息并将其转换为 JavaScript 对象，则变量 <code>map</code> 的值为该对象。此外，该代码还使用正则表达式 <code>convertSourceMap.mapFileCommentRegex</code> 在 <code>code</code> 中查找源映射文件的注释，并使用 <code>blankReplacer</code> 替换注释的内容，从而将 <code>code</code> 中的源映射信息删除。</p><p>如果提取源映射信息的过程中发生错误，则会捕获该错误并记录一个警告日志，告知用户加载源映射信息失败</p><h2 id="createconvertsourcemapreadmap" tabindex="-1">createConvertSourceMapReadMap <a class="header-anchor" href="#createconvertsourcemapreadmap" aria-label="Permalink to &quot;createConvertSourceMapReadMap&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">createConvertSourceMapReadMap</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">originalFileName</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">filename</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">readFile</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">dirname</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">originalFileName</span><span style="color:#ABB2BF;">), </span><span style="color:#E06C75;">filename</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#98C379;">&#39;utf-8&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    )</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> createConvertSourceMapReadMap(originalFileName</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> (filename</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">fs</span><span style="color:#B392F0;">.readFile(</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#79B8FF;">path</span><span style="color:#B392F0;">.resolve(</span><span style="color:#79B8FF;">path</span><span style="color:#B392F0;">.dirname(originalFileName)</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> filename)</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#FFAB70;">&#39;utf-8&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">    )</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><code>createConvertSourceMapReadMap</code>实际上是<code>convertSourceMap.fromMapFileSource(source, readMap)</code>方法的第二个传参</p><p><code>source</code> 是指包含源映射信息的文件的源代码。 <code>readMap</code> 函数用于读取与注释中指定的源映射信息相对应的源映射文件，该函数会在 <code>source</code> 文件中查找最后一个 <code>sourcemap</code> 注释，如果找到则返回源映射转换器，以便后续操作源映射信息，否则返回null。</p><p><code>readMap</code> 必须是一个函数，该函数接收源映射文件名作为参数，并返回源映射的字符串或缓冲区（如果是同步读取）或包含源映射字符串或缓冲区的Promise（如果是异步读取）。</p><p>如果 <code>readMap</code> 不返回Promise，<code>fromMapFileSource</code> 将同步返回源映射转换器。</p><p>如果 <code>readMap</code> 返回Promise，则 <code>fromMapFileSource</code> 也将返回Promise。该Promise将被解析为源映射转换器或被拒绝为一个错误</p><p>在解析源映射文件的过程中，<code>convertSourceMap.fromMapFileSource()</code> 方法会使用 <code>readmap</code> 函数读取源映射文件的内容，并将其转换为 JavaScript 对象或字符串。</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#E5C07B;">convertSourceMap</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fromMapFileSource</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E06C75;">code</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#61AFEF;">createConvertSourceMapReadMap</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">file</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">          )</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light"><code><span class="line"><span style="color:#79B8FF;">convertSourceMap</span><span style="color:#B392F0;">.fromMapFileSource(</span></span>
<span class="line"><span style="color:#B392F0;">            code</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">            createConvertSourceMapReadMap(file)</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">          )</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>readmap函数读取指定文件名的文件内容并以 UTF-8 编码格式返回该文件的文本内容</p><h2 id="path-dirname" tabindex="-1">path.dirname <a class="header-anchor" href="#path-dirname" aria-label="Permalink to &quot;path.dirname&quot;">​</a></h2><p><code>path.dirname()</code> 是 Node.js 中的一个函数，用于返回指定文件路径中的目录名部分，即去掉文件名和扩展名后的部分。这个函数接受一个字符串参数，表示文件路径，返回该文件路径中的目录名部分。</p><p>例如，如果文件路径为 <code>/foo/bar/index.js</code>，那么 <code>path.dirname(&#39;/foo/bar/index.js&#39;)</code> 将返回 <code>/foo/bar</code>。这个函数可以用于拼接文件路径，如 <code>path.resolve(path.dirname(originalFileName), filename)</code>，可以将原始文件的目录名与指定的文件名 <code>filename</code> 拼接成完整的文件路径。在实际应用中，<code>path.dirname()</code> 可以用于获取文件所在的目录路径，进而读取该目录下的其他文件。</p><h2 id="path-resolve" tabindex="-1">path.resolve <a class="header-anchor" href="#path-resolve" aria-label="Permalink to &quot;path.resolve&quot;">​</a></h2><p><code>path.resolve()</code> 是 Node.js 中的一个函数，用于将路径或路径片段拼接成完整的路径。</p><p>这个函数接受一到多个路径片段作为参数，并以操作系统特定的路径分隔符作为分隔符将这些路径片段连接起来，返回拼接后的完整路径字符串。如果参数中包含绝对路径（以 <code>/</code> 或 Windows 系统的盘符开头），则之前的路径都将被忽略，只返回最后一个绝对路径。</p><p>例如，在 Unix 系统中，<code>path.resolve(&#39;/foo/bar&#39;, &#39;./baz&#39;)</code> 返回 <code>/foo/bar/baz</code>，而 <code>path.resolve(&#39;/foo/bar&#39;, &#39;/tmp/file/&#39;)</code> 返回 <code>/tmp/file</code>。在 Windows 系统中，<code>path.resolve(&#39;C:/foo/bar&#39;, &#39;./baz&#39;)</code> 返回 <code>C:\\foo\\bar\\baz</code>，而 <code>path.resolve(&#39;C:/foo/bar&#39;, &#39;D:/tmp/file/&#39;)</code> 返回 <code>D:\\tmp\\file</code>。</p><p>在实际应用中，<code>path.resolve()</code> 可以用于拼接文件路径、构建绝对路径等场景。</p><h2 id="fs-readfile" tabindex="-1">fs.readFile <a class="header-anchor" href="#fs-readfile" aria-label="Permalink to &quot;fs.readFile&quot;">​</a></h2><p><code>fs.readFile()</code> 是 Node.js 中的一个函数，用于异步地读取文件的内容。它接受三个参数：</p><ul><li><code>path</code>：要读取的文件路径。</li><li><code>options</code>：可选参数，指定读取文件时的选项，例如编码格式、读取起始位置等。</li><li><code>callback</code>：回调函数，用于处理读取结果。该函数接受两个参数，第一个参数为错误对象，第二个参数为读取到的文件内容。</li></ul><p>当文件读取完成后，<code>fs.readFile()</code> 会调用回调函数，将读取到的文件内容传递给回调函数的第二个参数。如果读取文件时出现错误，例如文件不存在、无读取权限等，则 <code>fs.readFile()</code> 会将错误对象传递给回调函数的第一个参数。</p><p>例如，下面的代码读取指定路径的文件内容，并将读取到的内容输出到控制台上：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;fs&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">readFile</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;/path/to/file.txt&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;utf-8&#39;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">data</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">err</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">throw</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">err</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">fs</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> require(</span><span style="color:#FFAB70;">&#39;fs&#39;</span><span style="color:#B392F0;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">fs</span><span style="color:#B392F0;">.readFile(</span><span style="color:#FFAB70;">&#39;/path/to/file.txt&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;utf-8&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> (err</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> data) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (err) </span><span style="color:#F97583;">throw</span><span style="color:#B392F0;"> err;</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(data);</span></span>
<span class="line"><span style="color:#B392F0;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>若没有指定回调函数，则该函数返回一个 Promise 对象，可以通过 Promise 的 <code>then()</code> 方法来处理文件读取结果</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;fs&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">readFile</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;/path/to/file.txt&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;utf-8&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  .</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">data</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 输出读取到的文件内容</span></span>
<span class="line"><span style="color:#ABB2BF;">  })</span></span>
<span class="line"><span style="color:#ABB2BF;">  .</span><span style="color:#61AFEF;">catch</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">error</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">err</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 输出读取文件时的错误信息</span></span>
<span class="line"><span style="color:#ABB2BF;">  });</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">fs</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> require(</span><span style="color:#FFAB70;">&#39;fs&#39;</span><span style="color:#B392F0;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">fs</span><span style="color:#B392F0;">.readFile(</span><span style="color:#FFAB70;">&#39;/path/to/file.txt&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;utf-8&#39;</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">  .then(data </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(data); </span><span style="color:#6B737C;">// 输出读取到的文件内容</span></span>
<span class="line"><span style="color:#B392F0;">  })</span></span>
<span class="line"><span style="color:#B392F0;">  .catch(err </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.error(err); </span><span style="color:#6B737C;">// 输出读取文件时的错误信息</span></span>
<span class="line"><span style="color:#B392F0;">  });</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,40),e=[o];function r(c,t,B,y,F,i){return a(),n("div",null,e)}const m=s(p,[["render",r]]);export{u as __pageData,m as default};
