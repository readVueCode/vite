import{_ as s,c as n,o as a,U as l}from"./chunks/framework.29dee80d.js";const d=JSON.parse('{"title":"packages/vite/bin/vite.js","description":"","frontmatter":{},"headers":[],"relativePath":"bin/vite.md","lastUpdated":1684727739000}'),p={name:"bin/vite.md"},o=l(`<h1 id="packages-vite-bin-vite-js" tabindex="-1"><code>packages/vite/bin/vite.js</code> <a class="header-anchor" href="#packages-vite-bin-vite-js" aria-label="Permalink to &quot;\`packages/vite/bin/vite.js\`&quot;">​</a></h1><h2 id="完整代码" tabindex="-1">完整代码 <a class="header-anchor" href="#完整代码" aria-label="Permalink to &quot;完整代码&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#!/usr/bin/env node</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">performance</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;node:perf_hooks&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">url</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">includes</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;node_modules&#39;</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">// only available as dev dependency</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">await</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">import</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;source-map-support&#39;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">r</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">r</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">default</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">install</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">  } </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">e</span><span style="color:#ABB2BF;">) {}</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">global</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">__vite_start_time</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">performance</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">now</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// check debug mode first before requiring the CLI.</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">debugIndex</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">argv</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">findIndex</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">arg</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E06C75;"> /</span><span style="color:#C678DD;">^</span><span style="color:#E06C75;">(?:-d</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">--debug)</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">arg</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">filterIndex</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">argv</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">findIndex</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">arg</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">/</span><span style="color:#C678DD;">^</span><span style="color:#E06C75;">(?:-f</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">--filter)</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">arg</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">profileIndex</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">argv</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">indexOf</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;--profile&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">debugIndex</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">let</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">argv</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">debugIndex</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">||</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">value</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">startsWith</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;-&#39;</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;vite:*&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">  } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">// support debugging multiple flags with comma-separated list</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">value</span></span>
<span class="line"><span style="color:#ABB2BF;">      .</span><span style="color:#61AFEF;">split</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;,&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">      .</span><span style="color:#61AFEF;">map</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">v</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">\`vite:</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">v</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">      .</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;,&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">env</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">DEBUG</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">\`</span><span style="color:#C678DD;">\${</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">env</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">DEBUG</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">env</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">DEBUG</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;,&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">}\${</span><span style="color:#E06C75;">value</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">filterIndex</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">filter</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">argv</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">filterIndex</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">filter</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">!</span><span style="color:#E5C07B;">filter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">startsWith</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;-&#39;</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">env</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">VITE_DEBUG_FILTER</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">filter</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">start</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">import</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;../dist/node/cli.js&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">profileIndex</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">argv</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">splice</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">profileIndex</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">next</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">argv</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">profileIndex</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">next</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">!</span><span style="color:#E5C07B;">next</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">startsWith</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;-&#39;</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">argv</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">splice</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">profileIndex</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">inspector</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">await</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">import</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;node:inspector&#39;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">r</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">r</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">default</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">session</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">global</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">__vite_profile_session</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">inspector</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">Session</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">session</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">connect</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">session</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">post</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;Profiler.enable&#39;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">session</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">post</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;Profiler.start&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">start</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  })</span></span>
<span class="line"><span style="color:#ABB2BF;">} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#61AFEF;">start</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light"><code><span class="line"><span style="color:#6B737C;">#!/usr/bin/env node</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> { performance } </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;node:perf_hooks&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (</span><span style="color:#F97583;">!import</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">meta</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">url</span><span style="color:#B392F0;">.includes(</span><span style="color:#FFAB70;">&#39;node_modules&#39;</span><span style="color:#B392F0;">)) {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">try</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#6B737C;">// only available as dev dependency</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">await</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">import</span><span style="color:#B392F0;">(</span><span style="color:#FFAB70;">&#39;source-map-support&#39;</span><span style="color:#B392F0;">).then((r) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">r</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">default</span><span style="color:#B392F0;">.install())</span></span>
<span class="line"><span style="color:#B392F0;">  } </span><span style="color:#F97583;">catch</span><span style="color:#B392F0;"> (e) {}</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">global</span><span style="color:#B392F0;">.__vite_start_time </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">performance</span><span style="color:#B392F0;">.now()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// check debug mode first before requiring the CLI.</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">debugIndex</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">process</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">argv</span><span style="color:#B392F0;">.findIndex((arg) </span><span style="color:#F97583;">=&gt;</span><span style="color:#FFAB70;"> /</span><span style="color:#F97583;">^</span><span style="color:#FFAB70;">(?:-d</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">--debug)</span><span style="color:#F97583;">$</span><span style="color:#FFAB70;">/</span><span style="color:#B392F0;">.test(arg))</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">filterIndex</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">process</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">argv</span><span style="color:#B392F0;">.findIndex((arg) </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#FFAB70;">/</span><span style="color:#F97583;">^</span><span style="color:#FFAB70;">(?:-f</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">--filter)</span><span style="color:#F97583;">$</span><span style="color:#FFAB70;">/</span><span style="color:#B392F0;">.test(arg)</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">profileIndex</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">process</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">argv</span><span style="color:#B392F0;">.indexOf(</span><span style="color:#FFAB70;">&#39;--profile&#39;</span><span style="color:#B392F0;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (debugIndex </span><span style="color:#F97583;">&gt;</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">0</span><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">let</span><span style="color:#B392F0;"> value </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">process</span><span style="color:#B392F0;">.argv[debugIndex </span><span style="color:#F97583;">+</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">1</span><span style="color:#B392F0;">]</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (</span><span style="color:#F97583;">!</span><span style="color:#B392F0;">value </span><span style="color:#F97583;">||</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">value</span><span style="color:#B392F0;">.startsWith(</span><span style="color:#FFAB70;">&#39;-&#39;</span><span style="color:#B392F0;">)) {</span></span>
<span class="line"><span style="color:#B392F0;">    value </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;vite:*&#39;</span></span>
<span class="line"><span style="color:#B392F0;">  } </span><span style="color:#F97583;">else</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#6B737C;">// support debugging multiple flags with comma-separated list</span></span>
<span class="line"><span style="color:#B392F0;">    value </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> value</span></span>
<span class="line"><span style="color:#B392F0;">      .split(</span><span style="color:#FFAB70;">&#39;,&#39;</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">      .map((v) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">\`vite:</span><span style="color:#F97583;">\${</span><span style="color:#B392F0;">v</span><span style="color:#F97583;">}</span><span style="color:#FFAB70;">\`</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">      .join(</span><span style="color:#FFAB70;">&#39;,&#39;</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">process</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">env</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">DEBUG</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#F97583;">\${</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#79B8FF;">process</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">env</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">DEBUG</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">process</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">env</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">DEBUG</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">+</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;,&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;&#39;</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">}\${</span><span style="color:#B392F0;">value</span><span style="color:#F97583;">}</span><span style="color:#FFAB70;">\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (filterIndex </span><span style="color:#F97583;">&gt;</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">0</span><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">filter</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">process</span><span style="color:#B392F0;">.argv[filterIndex </span><span style="color:#F97583;">+</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">1</span><span style="color:#B392F0;">]</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (filter </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">!</span><span style="color:#79B8FF;">filter</span><span style="color:#B392F0;">.startsWith(</span><span style="color:#FFAB70;">&#39;-&#39;</span><span style="color:#B392F0;">)) {</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#79B8FF;">process</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">env</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">VITE_DEBUG_FILTER</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> filter</span></span>
<span class="line"><span style="color:#B392F0;">    }</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> start() {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">import</span><span style="color:#B392F0;">(</span><span style="color:#FFAB70;">&#39;../dist/node/cli.js&#39;</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (profileIndex </span><span style="color:#F97583;">&gt;</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">0</span><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">process</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">argv</span><span style="color:#B392F0;">.splice(profileIndex</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">1</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">next</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">process</span><span style="color:#B392F0;">.argv[profileIndex]</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (next </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">!</span><span style="color:#79B8FF;">next</span><span style="color:#B392F0;">.startsWith(</span><span style="color:#FFAB70;">&#39;-&#39;</span><span style="color:#B392F0;">)) {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#79B8FF;">process</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">argv</span><span style="color:#B392F0;">.splice(profileIndex</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">1</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">inspector</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">await</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">import</span><span style="color:#B392F0;">(</span><span style="color:#FFAB70;">&#39;node:inspector&#39;</span><span style="color:#B392F0;">).then((r) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">r</span><span style="color:#B392F0;">.default)</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">session</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> (</span><span style="color:#79B8FF;">global</span><span style="color:#B392F0;">.__vite_profile_session </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">inspector</span><span style="color:#B392F0;">.Session())</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">session</span><span style="color:#B392F0;">.connect()</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">session</span><span style="color:#B392F0;">.post(</span><span style="color:#FFAB70;">&#39;Profiler.enable&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#79B8FF;">session</span><span style="color:#B392F0;">.post(</span><span style="color:#FFAB70;">&#39;Profiler.start&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> start)</span></span>
<span class="line"><span style="color:#B392F0;">  })</span></span>
<span class="line"><span style="color:#B392F0;">} </span><span style="color:#F97583;">else</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  start()</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br></div></div><h2 id="node-perf-hooks" tabindex="-1">node:perf_hooks <a class="header-anchor" href="#node-perf-hooks" aria-label="Permalink to &quot;node:perf_hooks&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">performance</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;node:perf_hooks&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">...</span></span>
<span class="line"><span style="color:#E5C07B;">global</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">__vite_start_time</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">performance</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">now</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> { performance } </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;node:perf_hooks&#39;</span></span>
<span class="line"><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#79B8FF;">global</span><span style="color:#B392F0;">.__vite_start_time </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">performance</span><span style="color:#B392F0;">.now()</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Node.js的<code>perf_hooks</code> 模块，提供了一组用于测量性能的工具，其中 <code>performance</code> 对象是其中一个重要的对象，用于获取高精度的时间戳和测量性能的指标。</p><p>通过 <code>performance.now()</code> 方法获取当前的高精度时间戳：从性能计时器的起点（通常是脚本开始执行的时间）到当前时间的毫秒数，将其保存在全局变量 <code>__vite_start_time</code> 中，以便后续在代码中使用这个起始时间点进行性能分析和计算时间差等操作。</p><h2 id="使用动态导入的方式加载source-map-support库" tabindex="-1">使用动态导入的方式加载<code>source-map-support</code>库 <a class="header-anchor" href="#使用动态导入的方式加载source-map-support库" aria-label="Permalink to &quot;使用动态导入的方式加载\`source-map-support\`库&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">url</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">includes</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;node_modules&#39;</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">// only available as dev dependency</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">await</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">import</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;source-map-support&#39;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">r</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">r</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">default</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">install</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">  } </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">e</span><span style="color:#ABB2BF;">) {}</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light"><code><span class="line"><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (</span><span style="color:#F97583;">!import</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">meta</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">url</span><span style="color:#B392F0;">.includes(</span><span style="color:#FFAB70;">&#39;node_modules&#39;</span><span style="color:#B392F0;">)) {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">try</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#6B737C;">// only available as dev dependency</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">await</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">import</span><span style="color:#B392F0;">(</span><span style="color:#FFAB70;">&#39;source-map-support&#39;</span><span style="color:#B392F0;">).then((r) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">r</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">default</span><span style="color:#B392F0;">.install())</span></span>
<span class="line"><span style="color:#B392F0;">  } </span><span style="color:#F97583;">catch</span><span style="color:#B392F0;"> (e) {}</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>在非<code>node_modules</code>模块中尝试使用动态导入的方式加载<code>source-map-support</code>库，以提供源映射支持，用于开发环境中方便调试和定位错误。如果加载或调用过程中发生错误，将会被捕获并忽略。</p><ol><li><code>i<wbr>mport.meta.url</code> 返回当前模块的 URL 地址。<code>i<wbr>mport.meta.url.includes(&#39;node_modules&#39;)</code> 表达式判断当前模块的 URL 是否包含字符串<code>&#39;node_modules&#39;</code>。如果返回值为 <code>false</code>，表示当前模块不是来自于 <code>node_modules</code> 目录，即非第三方模块。</li><li><code>await import(&#39;source-map-support&#39;).then((r) =&gt; r.default.install())</code> 使用动态导入的方式加载名为 <code>source-map-support</code>的模块，当 <code>source-map-support</code> 模块加载完成后，<code>.then()</code> 方法会被调用，并接收加载的模块作为参数。在这里，使用箭头函数 <code>(r) =&gt; r.default.install()</code>，其中 <code>r</code> 是加载的模块对象。<code>r.default</code> 是模块的默认导出对象，而 <code>.install()</code> 是 <code>source-map-support</code> 模块的一个方法。</li></ol><h2 id="启用性能分析器-profiler" tabindex="-1">启用性能分析器（Profiler） <a class="header-anchor" href="#启用性能分析器-profiler" aria-label="Permalink to &quot;启用性能分析器（Profiler）&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">profileIndex</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">argv</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">indexOf</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;--profile&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">...</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">start</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">import</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;../dist/node/cli.js&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">profileIndex</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">argv</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">splice</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">profileIndex</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">next</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">argv</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">profileIndex</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">next</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">!</span><span style="color:#E5C07B;">next</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">startsWith</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;-&#39;</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">argv</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">splice</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">profileIndex</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">inspector</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">await</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">import</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;node:inspector&#39;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">r</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">r</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">default</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">session</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">global</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">__vite_profile_session</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">inspector</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">Session</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">session</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">connect</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">session</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">post</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;Profiler.enable&#39;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">session</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">post</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;Profiler.start&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">start</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  })</span></span>
<span class="line"><span style="color:#ABB2BF;">} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#61AFEF;">start</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">profileIndex</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">process</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">argv</span><span style="color:#B392F0;">.indexOf(</span><span style="color:#FFAB70;">&#39;--profile&#39;</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> start() {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">import</span><span style="color:#B392F0;">(</span><span style="color:#FFAB70;">&#39;../dist/node/cli.js&#39;</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (profileIndex </span><span style="color:#F97583;">&gt;</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">0</span><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">process</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">argv</span><span style="color:#B392F0;">.splice(profileIndex</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">1</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">next</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">process</span><span style="color:#B392F0;">.argv[profileIndex]</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (next </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">!</span><span style="color:#79B8FF;">next</span><span style="color:#B392F0;">.startsWith(</span><span style="color:#FFAB70;">&#39;-&#39;</span><span style="color:#B392F0;">)) {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#79B8FF;">process</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">argv</span><span style="color:#B392F0;">.splice(profileIndex</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">1</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">inspector</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">await</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">import</span><span style="color:#B392F0;">(</span><span style="color:#FFAB70;">&#39;node:inspector&#39;</span><span style="color:#B392F0;">).then((r) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">r</span><span style="color:#B392F0;">.default)</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">session</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> (</span><span style="color:#79B8FF;">global</span><span style="color:#B392F0;">.__vite_profile_session </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">inspector</span><span style="color:#B392F0;">.Session())</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">session</span><span style="color:#B392F0;">.connect()</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">session</span><span style="color:#B392F0;">.post(</span><span style="color:#FFAB70;">&#39;Profiler.enable&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#79B8FF;">session</span><span style="color:#B392F0;">.post(</span><span style="color:#FFAB70;">&#39;Profiler.start&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> start)</span></span>
<span class="line"><span style="color:#B392F0;">  })</span></span>
<span class="line"><span style="color:#B392F0;">} </span><span style="color:#F97583;">else</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  start()</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>这段代码的作用是：根据命令行参数中是否存在<code>--profile</code>参数，来决定是否启用性能分析器，并在适当的时候连接到调试器进行性能分析</p><ol><li><p>首先，使用<code>process.argv.indexOf(&#39;--profile&#39;)</code>获取命令行参数中<code>--profile</code>的索引位置，并将结果分配给<code>profileIndex</code>变量。<code>process.argv</code>是一个Node.js全局对象，它是一个包含命令行参数的数组。它的形式是：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">[</span><span style="color:#E5C07B;">Node</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">js执行路径</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">脚本文件路径</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">参数1</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">参数2</span><span style="color:#ABB2BF;">, ...]</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light"><code><span class="line"><span style="color:#B392F0;">[</span><span style="color:#79B8FF;">Node</span><span style="color:#B392F0;">.js执行路径</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> 脚本文件路径</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> 参数1</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> 参数2</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">...</span><span style="color:#B392F0;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>其中，<code>process.argv[0]</code>是Node.js的执行路径，<code>process.argv[1]</code>是当前执行的脚本文件的路径，后续的元素是传递给脚本的命令行参数。</p></li><li><p>接下来，定义了一个名为<code>start</code>的函数，该函数通过<code>import</code>语法导入位于<code>../dist/node/cli.js</code>路径的模块。</p></li><li><p>然后，通过检查<code>profileIndex</code>是否大于0，判断是否存在<code>--profile</code>标志。</p></li><li><p>如果存在<code>--profile</code>标志，首先从<code>process.argv</code>数组中删除该标志，使用<code>process.argv.splice(profileIndex, 1)</code>。<code>.splice(profileIndex, 1)</code>中<code>profileIndex</code> 是要移除的元素的起始索引，而 <code>1</code> 表示从该索引开始，要移除的元素数量。因此，<code>process.argv.splice(profileIndex, 1)</code> 表示从 <code>process.argv</code> 数组中移除位于 <code>profileIndex</code> 索引处的一个元素，即删除命令行参数中的 <code>--profile</code> 参数。</p></li><li><p>因为上一步移除位于 <code>profileIndex</code> 索引处的一个元素，所以<code>const next = process.argv[profileIndex]</code>的元素是之前元素的下一个元素，即 <code>--profile</code> 参数的下一个参数</p></li><li><p><code>if (next &amp;&amp; !next.startsWith(&#39;-&#39;)) { ... }</code>：这行代码检查变量 <code>next</code> 是否存在且不以 <code>-</code> 开头。如果 <code>next</code> 存在且不以 <code>-</code> 开头，表示它是一个非选项参数，可能是与 <code>--profile</code> 相关的值。在这种情况下，需要将它从命令行参数中移除，以避免影响后续的命令行处理。</p></li><li><p><code>await import(&#39;node:inspector&#39;).then((r) =&gt; r.default)</code>表示使用动态导入加载 <code>node:inspector</code> 模块，并调用其 <code>default</code> 属性得到模块的默认导出对象。</p></li><li><p><code>session = (global.__vite_profile_session = new inspector.Session())</code>这行代码使用了链式赋值语法，这种链式赋值语法可以在一行代码中同时进行多个赋值操作，提供了简洁的语法形式：将 <code>new inspector.Session()</code> 的返回值赋给了变量 <code>session</code>，也赋给了全局变量 <code>global.__vite_profile_session</code>。</p><p>通过这段代码，实现了两个操作：</p><ul><li>创建了一个新的 <code>inspector.Session</code> 实例。</li><li>将该实例赋值给变量 <code>session</code>，同时也将其赋值给全局变量 <code>global.__vite_profile_session</code>。</li></ul><p><code>node:inspector</code> 模块是一个内置的调试工具，用于在Node.js应用程序中进行调试和分析。它提供了一个交互式的调试环境，允许开发人员检查代码的执行过程、变量的值以及执行上下文中的任何其他细节。</p><p><code>node:inspector</code> 模块通过启用调试协议与Chrome开发者工具通信。它允许开发人员使用Chrome浏览器作为调试客户端，以可视化方式查看和控制Node.js应用程序的执行。</p><p><code>node:inspector</code> 模块具有以下功能：</p><ol><li>断点调试：开发人员可以在代码中设置断点，以便在特定位置停止执行，并检查程序的状态。可以设置条件断点，只有在满足特定条件时才会触发断点。</li><li>单步执行：开发人员可以逐行执行代码，并观察每一步的结果。这对于理解代码的执行流程以及调试特定问题非常有用。</li><li>变量查看：在调试过程中，可以查看当前执行上下文中的变量的值。这使开发人员能够了解代码在执行时变量的状态，并识别潜在的问题。</li><li>代码评估：可以在调试环境中执行任意的JavaScript代码片段，以便观察其结果。这对于验证假设或调试特定表达式非常有用。</li><li>异步调试：Node.js Inspector支持异步代码的调试，包括异步函数和Promise。开发人员可以在异步调用之间设置断点，并检查它们的执行顺序和结果。</li></ol><p>使用<code>node:inspector</code> 进行调试时，开发人员可以使用Chrome开发者工具的界面来查看调试信息，并与调试器进行交互。这提供了一个强大的工具来诊断和解决Node.js应用程序中的问题。</p></li><li><p>通过调用<code>session.connect()</code>方法，连接到调试器，与Chrome开发者工具建立通信通道。然后，使用<code>session.post()</code>方法发送命令给调试器。首先发送<code>&#39;Profiler.enable&#39;</code>命令以启用性能分析器。一旦性能分析器被启用，通过再次调用<code>session.post()</code>方法，发送<code>&#39;Profiler.start&#39;</code>命令，并传递一个名为<code>start</code>的回调函数作为参数。这个回调函数将在性能分析器开始记录之后执行。</p></li></ol>`,15),e=[o];function c(r,t,B,y,F,i){return a(),n("div",null,e)}const C=s(p,[["render",c]]);export{d as __pageData,C as default};
