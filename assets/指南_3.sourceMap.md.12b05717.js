import{_ as s,c as n,o as a,U as p}from"./chunks/framework.29dee80d.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"指南/3.sourceMap.md","lastUpdated":1683166191000}'),l={name:"指南/3.sourceMap.md"},o=p(`<h2 id="gensourcemapurl" tabindex="-1">genSourceMapUrl <a class="header-anchor" href="#gensourcemapurl" aria-label="Permalink to &quot;genSourceMapUrl&quot;">​</a></h2><p>这是一个用于生成源代码映射文件的URL地址的函数。它接收一个名为<code>map</code>的参数，可以是字符串或对象类型的 SourceMap，然后将其转换为 Base64 编码的字符串，最后将它们拼接到一个 <code>data</code> URL 上，返回生成的 URL 地址字符串。</p><p>具体而言，函数首先检查 <code>map</code> 参数的类型，如果是一个对象，就将其转换为字符串类型。然后，使用 <code>Buffer.from()</code> 将字符串编码为 Base64，并将 <code>data</code> URL 的前缀和 Base64 编码的字符串拼接起来。最后，将生成的 URL 地址字符串返回。</p><p>使用这个函数生成源代码映射文件的 URL 地址，可以用于在浏览器中调试 JavaScript 代码时，将源代码映射到编译后的代码。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">genSourceMapUrl</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">map</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">SourceMap</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">map</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">!==</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;string&#39;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">map</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">stringify</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">map</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">\`data:application/json;base64,</span><span style="color:#C678DD;">\${</span><span style="color:#E5C07B;">Buffer</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">from</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">map</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">toString</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;base64&#39;</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> genSourceMapUrl(map</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> SourceMap </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (</span><span style="color:#F97583;">typeof</span><span style="color:#B392F0;"> map </span><span style="color:#F97583;">!==</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;string&#39;</span><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">    map </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">JSON</span><span style="color:#B392F0;">.stringify(map)</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">\`data:application/json;base64,</span><span style="color:#F97583;">\${</span><span style="color:#79B8FF;">Buffer</span><span style="color:#B392F0;">.from(map).toString(</span><span style="color:#FFAB70;">&#39;base64&#39;</span><span style="color:#B392F0;">)</span><span style="color:#F97583;">}</span><span style="color:#FFAB70;">\`</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="getcodewithsourcemap" tabindex="-1">getCodeWithSourcemap <a class="header-anchor" href="#getcodewithsourcemap" aria-label="Permalink to &quot;getCodeWithSourcemap&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">getCodeWithSourcemap</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;font-style:italic;">type</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;js&#39;</span><span style="color:#ABB2BF;"> | </span><span style="color:#98C379;">&#39;css&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;font-style:italic;">code</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;font-style:italic;">map</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">SourceMap</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">debug</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">code</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">\`</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">/*</span><span style="color:#C678DD;">\${</span><span style="color:#E5C07B;">JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">stringify</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">map</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">replace</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/</span><span style="color:#56B6C2;">\\*\\/</span><span style="color:#E06C75;">/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;*</span><span style="color:#56B6C2;">\\\\</span><span style="color:#98C379;">/&#39;</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">*/</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">\`</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;js&#39;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">code</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">\`</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">//# sourceMappingURL=</span><span style="color:#C678DD;">\${</span><span style="color:#61AFEF;">genSourceMapUrl</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">map</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span></span>
<span class="line"><span style="color:#ABB2BF;">  } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;css&#39;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">code</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">\`</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">/*# sourceMappingURL=</span><span style="color:#C678DD;">\${</span><span style="color:#61AFEF;">genSourceMapUrl</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">map</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;">}</span><span style="color:#98C379;"> */\`</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">code</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> getCodeWithSourcemap(</span></span>
<span class="line"><span style="color:#B392F0;">  type</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;js&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;css&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  code</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  map</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> SourceMap</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (debug) {</span></span>
<span class="line"><span style="color:#B392F0;">    code </span><span style="color:#F97583;">+=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">\`\\n/*</span><span style="color:#F97583;">\${</span><span style="color:#79B8FF;">JSON</span><span style="color:#B392F0;">.stringify(map</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">null</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">2</span><span style="color:#B392F0;">).replace(</span><span style="color:#FFAB70;">/\\*\\//</span><span style="color:#F97583;">g</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;*\\\\/&#39;</span><span style="color:#B392F0;">)</span><span style="color:#F97583;">}</span><span style="color:#FFAB70;">*/\\n\`</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (type </span><span style="color:#F97583;">===</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;js&#39;</span><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">    code </span><span style="color:#F97583;">+=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">\`\\n//# sourceMappingURL=</span><span style="color:#F97583;">\${</span><span style="color:#B392F0;">genSourceMapUrl(map)</span><span style="color:#F97583;">}</span><span style="color:#FFAB70;">\`</span></span>
<span class="line"><span style="color:#B392F0;">  } </span><span style="color:#F97583;">else</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (type </span><span style="color:#F97583;">===</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;css&#39;</span><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">    code </span><span style="color:#F97583;">+=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">\`\\n/*# sourceMappingURL=</span><span style="color:#F97583;">\${</span><span style="color:#B392F0;">genSourceMapUrl(map)</span><span style="color:#F97583;">}</span><span style="color:#FFAB70;"> */\`</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> code</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><ol><li><code>type</code>，指定代码类型为 JavaScript 还是 CSS，类型为 <code>&#39;js&#39;</code> 或 <code>&#39;css&#39;</code>。</li><li><code>code</code>，包含 JavaScript 或 CSS 代码的字符串。</li><li><code>map</code>，表示源映射的对象，其中包含源代码和生成代码之间的映射信息。</li></ol><p>函数首先检查是否设置了 <code>debug</code> 标志，如果设置了，将源映射对象序列化为 JSON 格式，并添加为注释行附加到代码的末尾，以便调试使用。</p><p>接着，函数根据代码类型添加相应的 source map 信息，这些信息在浏览器中用于调试时跟踪源代码和生成代码之间的对应关系。对于 JavaScript，会添加一个单独的注释行，指向生成的 source map 文件。对于 CSS，将 source map URL 包含在注释块中。</p><p>最后，函数返回包含代码和 source map 信息的字符串。</p>`,11),e=[o];function c(r,t,B,y,F,i){return a(),n("div",null,e)}const C=s(l,[["render",c]]);export{d as __pageData,C as default};
