import{_ as s,c as a,o as n,U as p}from"./chunks/framework.29dee80d.js";const u=JSON.parse('{"title":"convert-source-map","description":"","frontmatter":{},"headers":[],"relativePath":"server/convert-source-map.md","lastUpdated":1686042994000}'),o={name:"server/convert-source-map.md"},l=p(`<h1 id="convert-source-map" tabindex="-1">convert-source-map <a class="header-anchor" href="#convert-source-map" aria-label="Permalink to &quot;convert-source-map&quot;">​</a></h1><blockquote><p><a href="https://www.npmjs.com/package/convert-source-map" target="_blank" rel="noreferrer">https://www.npmjs.com/package/convert-source-map</a></p></blockquote><p>Vite使用<code>convert-source-map</code>库进行source-map（源代码映射）操作。</p><p><code>convert-source-map</code> 是一个可以转换source-map为不同格式，或从不同格式转换source-map，并且允许增改属性的库。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dark-plus vp-code-dark"><code><span class="line"><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">convert</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">require</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;convert-source-map&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">json</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">convert</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">fromComment</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVpbGQvZm9vLm1pbi5qcyIsInNvdXJjZXMiOlsic3JjL2Zvby5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIvIn0=&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">toJSON</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">modified</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">convert</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">fromComment</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVpbGQvZm9vLm1pbi5qcyIsInNvdXJjZXMiOlsic3JjL2Zvby5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIvIn0=&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">setProperty</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;sources&#39;</span><span style="color:#D4D4D4;">, [ </span><span style="color:#CE9178;">&#39;SRC/FOO.JS&#39;</span><span style="color:#D4D4D4;"> ])</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">toJSON</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">json</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">modified</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">convert</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;convert-source-map&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">json</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">convert</span></span>
<span class="line"><span style="color:#ABB2BF;">  .</span><span style="color:#61AFEF;">fromComment</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVpbGQvZm9vLm1pbi5qcyIsInNvdXJjZXMiOlsic3JjL2Zvby5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIvIn0=&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  .</span><span style="color:#61AFEF;">toJSON</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">modified</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">convert</span></span>
<span class="line"><span style="color:#ABB2BF;">  .</span><span style="color:#61AFEF;">fromComment</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVpbGQvZm9vLm1pbi5qcyIsInNvdXJjZXMiOlsic3JjL2Zvby5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIvIn0=&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  .</span><span style="color:#61AFEF;">setProperty</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;sources&#39;</span><span style="color:#ABB2BF;">, [ </span><span style="color:#98C379;">&#39;SRC/FOO.JS&#39;</span><span style="color:#ABB2BF;"> ])</span></span>
<span class="line"><span style="color:#ABB2BF;">  .</span><span style="color:#61AFEF;">toJSON</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">json</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">modified</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dark-plus vp-code-dark"><code><span class="line"><span style="color:#D4D4D4;">{</span><span style="color:#CE9178;">&quot;version&quot;</span><span style="color:#D4D4D4;">:</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">,</span><span style="color:#CE9178;">&quot;file&quot;</span><span style="color:#D4D4D4;">:</span><span style="color:#CE9178;">&quot;build/foo.min.js&quot;</span><span style="color:#D4D4D4;">,</span><span style="color:#CE9178;">&quot;sources&quot;</span><span style="color:#D4D4D4;">:[</span><span style="color:#CE9178;">&quot;src/foo.js&quot;</span><span style="color:#D4D4D4;">],</span><span style="color:#CE9178;">&quot;names&quot;</span><span style="color:#D4D4D4;">:[],</span><span style="color:#CE9178;">&quot;mappings&quot;</span><span style="color:#D4D4D4;">:</span><span style="color:#CE9178;">&quot;AAAA&quot;</span><span style="color:#D4D4D4;">,</span><span style="color:#CE9178;">&quot;sourceRoot&quot;</span><span style="color:#D4D4D4;">:</span><span style="color:#CE9178;">&quot;/&quot;</span><span style="color:#D4D4D4;">}</span></span>
<span class="line"><span style="color:#D4D4D4;">{</span><span style="color:#CE9178;">&quot;version&quot;</span><span style="color:#D4D4D4;">:</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">,</span><span style="color:#CE9178;">&quot;file&quot;</span><span style="color:#D4D4D4;">:</span><span style="color:#CE9178;">&quot;build/foo.min.js&quot;</span><span style="color:#D4D4D4;">,</span><span style="color:#CE9178;">&quot;sources&quot;</span><span style="color:#D4D4D4;">:[</span><span style="color:#CE9178;">&quot;SRC/FOO.JS&quot;</span><span style="color:#D4D4D4;">],</span><span style="color:#CE9178;">&quot;names&quot;</span><span style="color:#D4D4D4;">:[],</span><span style="color:#CE9178;">&quot;mappings&quot;</span><span style="color:#D4D4D4;">:</span><span style="color:#CE9178;">&quot;AAAA&quot;</span><span style="color:#D4D4D4;">,</span><span style="color:#CE9178;">&quot;sourceRoot&quot;</span><span style="color:#D4D4D4;">:</span><span style="color:#CE9178;">&quot;/&quot;</span><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light"><code><span class="line"><span style="color:#ABB2BF;">{</span><span style="color:#98C379;">&quot;version&quot;</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;file&quot;</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;build/foo.min.js&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;sources&quot;</span><span style="color:#ABB2BF;">:[</span><span style="color:#98C379;">&quot;src/foo.js&quot;</span><span style="color:#ABB2BF;">],</span><span style="color:#98C379;">&quot;names&quot;</span><span style="color:#ABB2BF;">:[],</span><span style="color:#98C379;">&quot;mappings&quot;</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;AAAA&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;sourceRoot&quot;</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;/&quot;</span><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span><span style="color:#98C379;">&quot;version&quot;</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;file&quot;</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;build/foo.min.js&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;sources&quot;</span><span style="color:#ABB2BF;">:[</span><span style="color:#98C379;">&quot;SRC/FOO.JS&quot;</span><span style="color:#ABB2BF;">],</span><span style="color:#98C379;">&quot;names&quot;</span><span style="color:#ABB2BF;">:[],</span><span style="color:#98C379;">&quot;mappings&quot;</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;AAAA&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;sourceRoot&quot;</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;/&quot;</span><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>这种格式是 Source Map 的 JSON 格式，包含以下属性：</p><ul><li>version：Source Map 版本号，目前最新版为 3。</li><li>file：源文件编译后的文件名。</li><li>sources：源文件路径的数组，可以包含多个文件路径。</li><li>names：被映射的代码中的所有变量名或函数名，如果存在的话。</li><li>mappings：源代码与编译后代码之间的映射关系，是一个字符串。</li><li>sourceRoot：可选字段，表示源文件的根路径。</li></ul><p>在上述示例中，两条记录的版本、文件名、sourcRoot 都相同，区别在于 sources 字段的大小写不同，以及 mappings 的值为 &quot;AAAA&quot;，表示原始代码中的第一行映射到编译后代码的第一行。</p><p>在 Sourcemap 的 mappings 字段中，一个字符代表一组映射规则，这个字符包括四个部分，每个部分表示一组映射的信息。</p><h2 id="mappings" tabindex="-1">Mappings <a class="header-anchor" href="#mappings" aria-label="Permalink to &quot;Mappings&quot;">​</a></h2><p>Mappings 是一个字符串，它包含多个分号分隔的段，每个段都是一行代码到原始代码的映射。每个段由逗号分隔的四个值组成：generatedCodeColumn, sourceFileIndex, sourceCodeLine, sourceCodeColumn，可以用于将生成代码映射回原始代码的位置。每个段中的每个值都可以通过基于前一个段中的值的差异进行编码，以尽可能缩短字符串的长度。</p><p>比如，CAAC 中的 CAA 表示生成代码列数为 1，对应的原始代码在 input.js 文件中，行数为 2，列数为 1</p><h2 id="升级" tabindex="-1">升级 <a class="header-anchor" href="#升级" aria-label="Permalink to &quot;升级&quot;">​</a></h2><p>在 v2.0.0 之前，<code>fromMapFileComment</code> 和 <code>fromMapFileSource</code> 函数接受一个字符串类型的目录路径，并从文件系统中解析并读取源映射文件。但是，这种做法限制了库在 Node.js 环境下的使用，并且无法处理包含查询字符串的源文件。</p><p>在 v2.0.0 中，你需要传递一个自定义的函数来执行文件读取操作。该函数将接收源文件名作为字符串类型的参数，你可以将其解析为文件系统路径、URL 或其他任何格式。</p><p>如果你正在 Node.js 环境中使用 <code>convert-source-map</code> 并希望保留先前的行为，则可以使用以下类似的函数：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dark-plus vp-code-dark"><code><span class="line"><span style="color:#D4D4D4;">+ </span><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">fs</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">require</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;fs&#39;</span><span style="color:#D4D4D4;">); </span><span style="color:#6A9955;">// Import the fs module to read a file</span></span>
<span class="line"><span style="color:#D4D4D4;">+ </span><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">path</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">require</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;path&#39;</span><span style="color:#D4D4D4;">); </span><span style="color:#6A9955;">// Import the path module to resolve a path against your directory</span></span>
<span class="line"><span style="color:#D4D4D4;">- </span><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">conv</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">convert</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">fromMapFileSource</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">css</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;../my-dir&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">+ </span><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">conv</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">convert</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">fromMapFileSource</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">css</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">filename</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">+   </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">fs</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">readFileSync</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">path</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;../my-dir&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">filename</span><span style="color:#D4D4D4;">), </span><span style="color:#CE9178;">&#39;utf-8&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">+ });</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light"><code><span class="line"><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">fs</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;fs&#39;</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// Import the fs module to read a file</span></span>
<span class="line"><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;path&#39;</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// Import the path module to resolve a path against your directory</span></span>
<span class="line"><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">conv</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">convert</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fromMapFileSource</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">css</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;../my-dir&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">conv</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">convert</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fromMapFileSource</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">css</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">filename</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;">   </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">readFileSync</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;../my-dir&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">filename</span><span style="color:#ABB2BF;">), </span><span style="color:#98C379;">&#39;utf-8&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> });</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="fromobject-obj" tabindex="-1">fromObject(obj) <a class="header-anchor" href="#fromobject-obj" aria-label="Permalink to &quot;fromObject(obj)&quot;">​</a></h2><p>从给定的对象返回源映射转换器。</p><h3 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dark-plus vp-code-dark"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">convertSourceMap</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">require</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;convert-source-map&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">sourceMap</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">convertSourceMap</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">fromObject</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">version:</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">file:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;output.js&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">sources:</span><span style="color:#D4D4D4;"> [</span><span style="color:#CE9178;">&#39;input.js&#39;</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">mappings:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;AAAA,CAAC,GAAG,EAAE&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">sourceMap</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">toObject</span><span style="color:#D4D4D4;">()); </span><span style="color:#6A9955;">// 输出 source map 对象</span></span>
<span class="line"><span style="color:#6A9955;">//{</span></span>
<span class="line"><span style="color:#6A9955;">//  version: 3,</span></span>
<span class="line"><span style="color:#6A9955;">//  file: &#39;output.js&#39;,</span></span>
<span class="line"><span style="color:#6A9955;">//  sources: [&#39;input.js&#39;],</span></span>
<span class="line"><span style="color:#6A9955;">//  mappings: &#39;AAAA,CAAC,GAAG,EAAE&#39;</span></span>
<span class="line"><span style="color:#6A9955;">//}</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">convertSourceMap</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;convert-source-map&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">sourceMap</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">convertSourceMap</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fromObject</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">version</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">file</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;output.js&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">sources</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&#39;input.js&#39;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">mappings</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;AAAA,CAAC,GAAG,EAAE&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">sourceMap</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toObject</span><span style="color:#ABB2BF;">()); </span><span style="color:#7F848E;font-style:italic;">// 输出 source map 对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//  version: 3,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//  file: &#39;output.js&#39;,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//  sources: [&#39;input.js&#39;],</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//  mappings: &#39;AAAA,CAAC,GAAG,EAAE&#39;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="fromjson-json" tabindex="-1">fromJSON(json) <a class="header-anchor" href="#fromjson-json" aria-label="Permalink to &quot;fromJSON(json)&quot;">​</a></h2><p>从给定的JSON字符串返回源映射转换器。</p><h3 id="示例-1" tabindex="-1">示例 <a class="header-anchor" href="#示例-1" aria-label="Permalink to &quot;示例&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dark-plus vp-code-dark"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">convertSourceMap</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">require</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;convert-source-map&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">json</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;{&quot;version&quot;:3,&quot;sources&quot;:[&quot;input.js&quot;],&quot;names&quot;:[],&quot;mappings&quot;:&quot;AAAA,CAAC,GAAG,EAAE&quot;,&quot;file&quot;:&quot;output.js&quot;}&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">sourceMap</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">convertSourceMap</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">fromJSON</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">json</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">sourceMap</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">toObject</span><span style="color:#D4D4D4;">());</span></span>
<span class="line"><span style="color:#6A9955;">//{</span></span>
<span class="line"><span style="color:#6A9955;">//  version: 3,</span></span>
<span class="line"><span style="color:#6A9955;">//  file: &#39;output.js&#39;,</span></span>
<span class="line"><span style="color:#6A9955;">//  sources: [&#39;input.js&#39;],</span></span>
<span class="line"><span style="color:#6A9955;">//  mappings: &#39;AAAA,CAAC,GAAG,EAAE&#39;</span></span>
<span class="line"><span style="color:#6A9955;">//}</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">convertSourceMap</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;convert-source-map&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">json</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;{&quot;version&quot;:3,&quot;sources&quot;:[&quot;input.js&quot;],&quot;names&quot;:[],&quot;mappings&quot;:&quot;AAAA,CAAC,GAAG,EAAE&quot;,&quot;file&quot;:&quot;output.js&quot;}&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">sourceMap</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">convertSourceMap</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fromJSON</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">json</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">sourceMap</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toObject</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//  version: 3,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//  file: &#39;output.js&#39;,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//  sources: [&#39;input.js&#39;],</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//  mappings: &#39;AAAA,CAAC,GAAG,EAAE&#39;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="fromuri-uri" tabindex="-1">fromURI(uri) <a class="header-anchor" href="#fromuri-uri" aria-label="Permalink to &quot;fromURI(uri)&quot;">​</a></h2><p>从给定的URI编码的JSON字符串返回源映射转换器。</p><h2 id="frombase64-base64" tabindex="-1">fromBase64(base64) <a class="header-anchor" href="#frombase64-base64" aria-label="Permalink to &quot;fromBase64(base64)&quot;">​</a></h2><p>从给定的base64编码的JSON字符串返回源映射转换器。</p><h2 id="fromcomment-comment" tabindex="-1">fromComment(comment) <a class="header-anchor" href="#fromcomment-comment" aria-label="Permalink to &quot;fromComment(comment)&quot;">​</a></h2><p>从以<code>//# sourceMappingURL=...</code>为前缀的给定base64或URI编码的JSON字符串返回源映射转换器。</p><h3 id="示例-2" tabindex="-1">示例 <a class="header-anchor" href="#示例-2" aria-label="Permalink to &quot;示例&quot;">​</a></h3><p>假设有一个JavaScript源文件main.js，它引用了一个包含源映射的JavaScript文件main.min.js。源映射信息存储在另一个文件main.min.js.map中。</p><p>在main.js文件的底部，有一个指向源映射文件的注释：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dark-plus vp-code-dark"><code><span class="line"><span style="color:#6A9955;">//# sourceMappingURL=main.min.js.map</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//# sourceMappingURL=main.min.js.map</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>现在，我们可以使用<code>convert-source-map</code>模块的<code>fromComment</code>方法来获取源映射转换器，以便后续使用：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dark-plus vp-code-dark"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">convert</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">require</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;convert-source-map&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">fs</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">require</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;fs&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">code</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">fs</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">readFileSync</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;main.min.js&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;utf8&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">comment</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">convert</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">fromSource</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">code</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">toComment</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">map</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">convert</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">fromComment</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">comment</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">map</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">toObject</span><span style="color:#D4D4D4;">());</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">convert</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;convert-source-map&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;fs&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">code</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">readFileSync</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;main.min.js&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;utf8&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">comment</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">convert</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">fromSource</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">code</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">toComment</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">map</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">convert</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">fromComment</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">comment</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">map</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toObject</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>在这个例子中，<code>fromComment</code>方法将从给定的注释中提取源映射信息并返回源映射转换器。<code>toObject()</code>方法用于将转换器转换为一个JavaScript对象，该对象包含源映射的所有信息。</p><h2 id="frommapfilecomment-comment-readmap" tabindex="-1">fromMapFileComment(comment, readMap) <a class="header-anchor" href="#frommapfilecomment-comment-readmap" aria-label="Permalink to &quot;fromMapFileComment(comment, readMap)&quot;">​</a></h2><p>根据解析的 <code>//# sourceMappingURL=filename</code>，返回一个与给定文件名对应的源代码映射转换器(source map converter)。</p><p><code>readMap</code> 必须是一个函数，该函数接收源代码映射文件名，并返回源代码映射的字符串或缓冲区（如果同步读取），或者返回包含源代码映射字符串或缓冲区的 Promise（如果异步读取）。</p><p>如果 <code>readMap</code> 函数不返回 Promise，则 <code>fromMapFileComment</code> 方法将同步返回源代码映射转换器。</p><p>如果 <code>readMap</code> 函数返回 Promise，则 <code>fromMapFileComment</code> 方法也将返回一个 Promise。该 Promise 将被解析为源代码映射转换器，或被拒绝为一个错误。</p><h3 id="示例-3" tabindex="-1">示例 <a class="header-anchor" href="#示例-3" aria-label="Permalink to &quot;示例&quot;">​</a></h3><p>在 Node.js 中进行同步读取：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dark-plus vp-code-dark"><code><span class="line"><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">convert</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">require</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;convert-source-map&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">fs</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">require</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;fs&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">readMap</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">filename</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">fs</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">readFileSync</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">filename</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;utf8&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">json</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">convert</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">fromMapFileComment</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;//# sourceMappingURL=map-file-comment.css.map&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">readMap</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">toJSON</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">json</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">convert</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;convert-source-map&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">fs</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;fs&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">readMap</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">filename</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">readFileSync</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">filename</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;utf8&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">json</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">convert</span></span>
<span class="line"><span style="color:#ABB2BF;">  .</span><span style="color:#61AFEF;">fromMapFileComment</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;//# sourceMappingURL=map-file-comment.css.map&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">readMap</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  .</span><span style="color:#61AFEF;">toJSON</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">json</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>在 Node.js 中进行异步读取：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dark-plus vp-code-dark"><code><span class="line"><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">convert</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">require</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;convert-source-map&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">promises</span><span style="color:#D4D4D4;">: </span><span style="color:#9CDCFE;">fs</span><span style="color:#D4D4D4;"> } = </span><span style="color:#DCDCAA;">require</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;fs&#39;</span><span style="color:#D4D4D4;">); </span><span style="color:#6A9955;">// Notice the \`promises\` import</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">readMap</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">filename</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">fs</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">readFile</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">filename</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;utf8&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">converter</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">convert</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">fromMapFileComment</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;//# sourceMappingURL=map-file-comment.css.map&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">readMap</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">json</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">converter</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">toJSON</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">json</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">convert</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;convert-source-map&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">promises</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">fs</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;fs&#39;</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// Notice the \`promises\` import</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">readMap</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">filename</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">readFile</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">filename</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;utf8&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">converter</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">await</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">convert</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fromMapFileComment</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;//# sourceMappingURL=map-file-comment.css.map&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">readMap</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">json</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">converter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toJSON</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">json</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>在浏览器中进行异步读取：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dark-plus vp-code-dark"><code><span class="line"><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">convert</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">require</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;convert-source-map&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">readMap</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">url</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">res</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">fetch</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">url</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">text</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">converter</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">convert</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">fromMapFileComment</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;//# sourceMappingURL=map-file-comment.css.map&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">readMap</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">json</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">converter</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">toJSON</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">json</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">convert</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;convert-source-map&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">async</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">readMap</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">url</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">res</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">await</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">fetch</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">res</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">text</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">converter</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">await</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">convert</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fromMapFileComment</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;//# sourceMappingURL=map-file-comment.css.map&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">readMap</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">json</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">converter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toJSON</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">json</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="fromsource-source" tabindex="-1">fromSource(source) <a class="header-anchor" href="#fromsource-source" aria-label="Permalink to &quot;fromSource(source)&quot;">​</a></h2><p>在给定的源代码中查找最后一个 source map 的注释，如果没有找到注释，则返回 null。如果找到了注释，则返回 source map 转换器</p><h2 id="frommapfilesource-source-readmap" tabindex="-1">fromMapFileSource(source, readMap) <a class="header-anchor" href="#frommapfilesource-source-readmap" aria-label="Permalink to &quot;fromMapFileSource(source, readMap)&quot;">​</a></h2><p>在文件中查找最后一个源代码映射注释，并返回对应的源代码映射转换器；如果没有找到源代码映射注释，则返回 <code>null</code>。</p><p><code>readMap</code> 必须是一个函数，该函数接收源代码映射文件名，并返回源代码映射的字符串或缓冲区（如果同步读取），或者返回包含源代码映射字符串或缓冲区的 Promise（如果异步读取）。</p><p>如果 <code>readMap</code> 函数不返回 Promise，则 <code>fromMapFileSource</code> 方法将同步返回源代码映射转换器。</p><p>如果 <code>readMap</code> 函数返回 Promise，则 <code>fromMapFileSource</code> 方法也将返回一个 Promise。该 Promise 将被解析为源代码映射转换器，或被拒绝为一个错误。</p><h2 id="fromsource和frommapfilesource有啥区别" tabindex="-1">fromSource和fromMapFileSource有啥区别 <a class="header-anchor" href="#fromsource和frommapfilesource有啥区别" aria-label="Permalink to &quot;fromSource和fromMapFileSource有啥区别&quot;">​</a></h2><p><code>fromSource</code> 方法和 <code>fromMapFileSource</code> 方法的主要区别在于它们寻找 source map 注释的位置和方式。</p><p><code>fromSource</code> 方法会在给定的源代码中查找最后一个 source map 注释，并返回一个 source map 转换器。这意味着它要求在源代码中有一个行内注释，其中包含 source map 的链接地址，例如：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dark-plus vp-code-dark"><code><span class="line"><span style="color:#6A9955;">//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ...</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ...</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>另一方面，<code>fromMapFileSource</code> 方法会在给定的源代码中查找所有指向外部 source map 文件的注释，并返回一个 source map 转换器。这意味着它要求在源代码中有一个或多个类似下面的注释：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dark-plus vp-code-dark"><code><span class="line"><span style="color:#6A9955;">//# sourceMappingURL=example.map</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//# sourceMappingURL=example.map</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>fromMapFileSource</code> 方法还要求提供一个用于读取外部 source map 文件的函数，该函数可以同步或异步读取文件内容并返回一个包含 source map 数据的字符串或缓冲区。</p><p>因此，两种方法适用于不同的场景，取决于 source map 注释的位置和读取 source map 数据的方式。</p><h2 id="toobject" tabindex="-1">toObject() <a class="header-anchor" href="#toobject" aria-label="Permalink to &quot;toObject()&quot;">​</a></h2><p>返回底层源代码映射的副本。</p><h2 id="tojson-space" tabindex="-1">toJSON([space]) <a class="header-anchor" href="#tojson-space" aria-label="Permalink to &quot;toJSON([space])&quot;">​</a></h2><p>将源代码映射转换为 JSON 字符串。如果指定了 <code>space</code>（可选），则在生成 JSON 字符串时会将其传递给 <code>JSON.stringify</code>。</p><h2 id="touri" tabindex="-1">toURI() <a class="header-anchor" href="#touri" aria-label="Permalink to &quot;toURI()&quot;">​</a></h2><p>将源代码映射转换为 URI 编码的 JSON 字符串。</p><h2 id="tobase64" tabindex="-1">toBase64() <a class="header-anchor" href="#tobase64" aria-label="Permalink to &quot;toBase64()&quot;">​</a></h2><p>将源代码映射转换为 Base64 编码的 JSON 字符串。</p><h2 id="tocomment-options" tabindex="-1">toComment([options]) <a class="header-anchor" href="#tocomment-options" aria-label="Permalink to &quot;toComment([options])&quot;">​</a></h2><p>将源代码映射转换为可以附加到源文件中的内联注释。</p><p>默认情况下，注释格式为：<code>//# sourceMappingURL=...</code>，在 JS 源文件中通常会看到。</p><p>当 <code>options.encoding == &#39;uri&#39;</code> 时，数据将被 URI 编码，否则它们将被 Base64 编码。</p><p>当 <code>options.multiline == true</code> 时，注释格式为：<code>/*# sourceMappingURL=... */</code>，在 CSS 源文件中通常会看到。</p><h2 id="addproperty-key-value" tabindex="-1">addProperty(key, value) <a class="header-anchor" href="#addproperty-key-value" aria-label="Permalink to &quot;addProperty(key, value)&quot;">​</a></h2><p>向源代码映射中添加指定的属性。如果该属性已存在，则抛出错误。</p><h2 id="setproperty-key-value" tabindex="-1">setProperty(key, value) <a class="header-anchor" href="#setproperty-key-value" aria-label="Permalink to &quot;setProperty(key, value)&quot;">​</a></h2><p>将指定的属性设置为源代码映射。如果该属性不存在，则添加它，否则更新其值。</p><h2 id="getproperty-key" tabindex="-1">getProperty(key) <a class="header-anchor" href="#getproperty-key" aria-label="Permalink to &quot;getProperty(key)&quot;">​</a></h2><p>获取源代码映射的指定属性。</p><h2 id="removecomments-src" tabindex="-1">removeComments(src) <a class="header-anchor" href="#removecomments-src" aria-label="Permalink to &quot;removeComments(src)&quot;">​</a></h2><p>返回已删除所有源代码映射注释的 <code>src</code>。</p><h2 id="removemapfilecomments-src" tabindex="-1">removeMapFileComments(src) <a class="header-anchor" href="#removemapfilecomments-src" aria-label="Permalink to &quot;removeMapFileComments(src)&quot;">​</a></h2><p>返回已删除所有指向映射文件的源代码映射注释的 <code>src</code>。</p><h2 id="commentregex" tabindex="-1">commentRegex <a class="header-anchor" href="#commentregex" aria-label="Permalink to &quot;commentRegex&quot;">​</a></h2><p>每次访问时提供一个新的 RegExp。可用于查找源代码映射注释。</p><p>将源代码映射注释拆分为组：组 1：媒体类型，组 2：MIME 类型，组 3：字符集，组 4：编码，组 5：数据。</p><h2 id="mapfilecommentregex" tabindex="-1">mapFileCommentRegex <a class="header-anchor" href="#mapfilecommentregex" aria-label="Permalink to &quot;mapFileCommentRegex&quot;">​</a></h2><p>每次访问时提供一个新的 RegExp。可用于查找指向映射文件的源代码映射注释。</p><h2 id="generatemapfilecomment-file-options" tabindex="-1">generateMapFileComment(file, [options]) <a class="header-anchor" href="#generatemapfilecomment-file-options" aria-label="Permalink to &quot;generateMapFileComment(file, [options])&quot;">​</a></h2><p>返回通过文件链接到外部源代码映射的注释。</p><p>默认情况下，注释格式为：<code>//# sourceMappingURL=...</code>，在 JS 源文件中通常会看到。</p><p>当 <code>options.multiline == true</code> 时，注释格式为：<code>/*# sourceMappingURL=... */</code>，在 CSS 源文件中通常会看到。</p>`,98),e=[l];function r(c,t,y,D,i,B){return n(),a("div",null,e)}const m=s(o,[["render",r]]);export{u as __pageData,m as default};
