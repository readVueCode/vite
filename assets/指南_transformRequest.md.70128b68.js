import{_ as s,c as a,o as n,U as p}from"./chunks/framework.29dee80d.js";const u=JSON.parse('{"title":"sourceMap","description":"","frontmatter":{},"headers":[],"relativePath":"指南/transformRequest.md","lastUpdated":1683771975000}'),l={name:"指南/transformRequest.md"},o=p(`<h1 id="sourcemap" tabindex="-1">sourceMap <a class="header-anchor" href="#sourcemap" aria-label="Permalink to &quot;sourceMap&quot;">​</a></h1><p>source-map是一个用于调试JavaScript代码的技术，它可以将经过压缩的JavaScript代码映射回其原始源代码的位置。在开发大型JavaScript应用程序时，使用source-map可以帮助开发人员更快地调试代码并定位其中的错误。</p><p>Vite使用<code>convert-source-map</code>库进行source-map操作。</p><h2 id="convert-source-map" tabindex="-1">convert-source-map <a class="header-anchor" href="#convert-source-map" aria-label="Permalink to &quot;convert-source-map&quot;">​</a></h2><p><code>convert-source-map</code> 是一个可以转换source-map为不同格式，或从不同格式转换source-map，并且允许增改属性的库。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">convert</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;convert-source-map&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">json</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">convert</span></span>
<span class="line"><span style="color:#ABB2BF;">  .</span><span style="color:#61AFEF;">fromComment</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVpbGQvZm9vLm1pbi5qcyIsInNvdXJjZXMiOlsic3JjL2Zvby5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIvIn0=&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  .</span><span style="color:#61AFEF;">toJSON</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">modified</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">convert</span></span>
<span class="line"><span style="color:#ABB2BF;">  .</span><span style="color:#61AFEF;">fromComment</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVpbGQvZm9vLm1pbi5qcyIsInNvdXJjZXMiOlsic3JjL2Zvby5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIvIn0=&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  .</span><span style="color:#61AFEF;">setProperty</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;sources&#39;</span><span style="color:#ABB2BF;">, [ </span><span style="color:#98C379;">&#39;SRC/FOO.JS&#39;</span><span style="color:#ABB2BF;"> ])</span></span>
<span class="line"><span style="color:#ABB2BF;">  .</span><span style="color:#61AFEF;">toJSON</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">json</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">modified</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#B392F0;"> convert </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> require(</span><span style="color:#FFAB70;">&#39;convert-source-map&#39;</span><span style="color:#B392F0;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#B392F0;"> json </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> convert</span></span>
<span class="line"><span style="color:#B392F0;">  .fromComment(</span><span style="color:#FFAB70;">&#39;//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVpbGQvZm9vLm1pbi5qcyIsInNvdXJjZXMiOlsic3JjL2Zvby5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIvIn0=&#39;</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">  .toJSON();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#B392F0;"> modified </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> convert</span></span>
<span class="line"><span style="color:#B392F0;">  .fromComment(</span><span style="color:#FFAB70;">&#39;//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVpbGQvZm9vLm1pbi5qcyIsInNvdXJjZXMiOlsic3JjL2Zvby5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIvIn0=&#39;</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">  .setProperty(</span><span style="color:#FFAB70;">&#39;sources&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> [ </span><span style="color:#FFAB70;">&#39;SRC/FOO.JS&#39;</span><span style="color:#B392F0;"> ])</span></span>
<span class="line"><span style="color:#B392F0;">  .toJSON();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(json);</span></span>
<span class="line"><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(modified);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">{</span><span style="color:#98C379;">&quot;version&quot;</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;file&quot;</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;build/foo.min.js&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;sources&quot;</span><span style="color:#ABB2BF;">:[</span><span style="color:#98C379;">&quot;src/foo.js&quot;</span><span style="color:#ABB2BF;">],</span><span style="color:#98C379;">&quot;names&quot;</span><span style="color:#ABB2BF;">:[],</span><span style="color:#98C379;">&quot;mappings&quot;</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;AAAA&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;sourceRoot&quot;</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;/&quot;</span><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span><span style="color:#98C379;">&quot;version&quot;</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;file&quot;</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;build/foo.min.js&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;sources&quot;</span><span style="color:#ABB2BF;">:[</span><span style="color:#98C379;">&quot;SRC/FOO.JS&quot;</span><span style="color:#ABB2BF;">],</span><span style="color:#98C379;">&quot;names&quot;</span><span style="color:#ABB2BF;">:[],</span><span style="color:#98C379;">&quot;mappings&quot;</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;AAAA&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;sourceRoot&quot;</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;/&quot;</span><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light"><code><span class="line"><span style="color:#B392F0;">{</span><span style="color:#FFAB70;">&quot;version&quot;</span><span style="color:#B392F0;">:</span><span style="color:#F8F8F8;">3</span><span style="color:#BBBBBB;">,</span><span style="color:#FFAB70;">&quot;file&quot;</span><span style="color:#B392F0;">:</span><span style="color:#FFAB70;">&quot;build/foo.min.js&quot;</span><span style="color:#BBBBBB;">,</span><span style="color:#FFAB70;">&quot;sources&quot;</span><span style="color:#B392F0;">:[</span><span style="color:#FFAB70;">&quot;src/foo.js&quot;</span><span style="color:#B392F0;">]</span><span style="color:#BBBBBB;">,</span><span style="color:#FFAB70;">&quot;names&quot;</span><span style="color:#B392F0;">:[]</span><span style="color:#BBBBBB;">,</span><span style="color:#FFAB70;">&quot;mappings&quot;</span><span style="color:#B392F0;">:</span><span style="color:#FFAB70;">&quot;AAAA&quot;</span><span style="color:#BBBBBB;">,</span><span style="color:#FFAB70;">&quot;sourceRoot&quot;</span><span style="color:#B392F0;">:</span><span style="color:#FFAB70;">&quot;/&quot;</span><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#B392F0;">{</span><span style="color:#FFAB70;">&quot;version&quot;</span><span style="color:#B392F0;">:</span><span style="color:#F8F8F8;">3</span><span style="color:#BBBBBB;">,</span><span style="color:#FFAB70;">&quot;file&quot;</span><span style="color:#B392F0;">:</span><span style="color:#FFAB70;">&quot;build/foo.min.js&quot;</span><span style="color:#BBBBBB;">,</span><span style="color:#FFAB70;">&quot;sources&quot;</span><span style="color:#B392F0;">:[</span><span style="color:#FFAB70;">&quot;SRC/FOO.JS&quot;</span><span style="color:#B392F0;">]</span><span style="color:#BBBBBB;">,</span><span style="color:#FFAB70;">&quot;names&quot;</span><span style="color:#B392F0;">:[]</span><span style="color:#BBBBBB;">,</span><span style="color:#FFAB70;">&quot;mappings&quot;</span><span style="color:#B392F0;">:</span><span style="color:#FFAB70;">&quot;AAAA&quot;</span><span style="color:#BBBBBB;">,</span><span style="color:#FFAB70;">&quot;sourceRoot&quot;</span><span style="color:#B392F0;">:</span><span style="color:#FFAB70;">&quot;/&quot;</span><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="升级" tabindex="-1">升级 <a class="header-anchor" href="#升级" aria-label="Permalink to &quot;升级&quot;">​</a></h3><p>在 v2.0.0 之前，<code>fromMapFileComment</code> 和 <code>fromMapFileSource</code> 函数接受一个字符串类型的目录路径，并从文件系统中解析并读取源映射文件。但是，这种做法限制了库在 Node.js 环境下的使用，并且无法处理包含查询字符串的源文件。</p><p>在 v2.0.0 中，你需要传递一个自定义的函数来执行文件读取操作。该函数将接收源文件名作为字符串类型的参数，你可以将其解析为文件系统路径、URL 或其他任何格式。</p><p>如果你正在 Node.js 环境中使用 <code>convert-source-map</code> 并希望保留先前的行为，则可以使用以下类似的函数：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">fs</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;fs&#39;</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// Import the fs module to read a file</span></span>
<span class="line"><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;path&#39;</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// Import the path module to resolve a path against your directory</span></span>
<span class="line"><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">conv</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">convert</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fromMapFileSource</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">css</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;../my-dir&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">conv</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">convert</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fromMapFileSource</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">css</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">filename</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;">   </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">readFileSync</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;../my-dir&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">filename</span><span style="color:#ABB2BF;">), </span><span style="color:#98C379;">&#39;utf-8&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> });</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light"><code><span class="line"><span style="color:#F97583;">+</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">var</span><span style="color:#B392F0;"> fs </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> require(</span><span style="color:#FFAB70;">&#39;fs&#39;</span><span style="color:#B392F0;">); </span><span style="color:#6B737C;">// Import the fs module to read a file</span></span>
<span class="line"><span style="color:#F97583;">+</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">var</span><span style="color:#B392F0;"> path </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> require(</span><span style="color:#FFAB70;">&#39;path&#39;</span><span style="color:#B392F0;">); </span><span style="color:#6B737C;">// Import the path module to resolve a path against your directory</span></span>
<span class="line"><span style="color:#F97583;">-</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">var</span><span style="color:#B392F0;"> conv </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">convert</span><span style="color:#B392F0;">.fromMapFileSource(css</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;../my-dir&#39;</span><span style="color:#B392F0;">);</span></span>
<span class="line"><span style="color:#F97583;">+</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">var</span><span style="color:#B392F0;"> conv </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">convert</span><span style="color:#B392F0;">.fromMapFileSource(css</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> (filename) {</span></span>
<span class="line"><span style="color:#F97583;">+</span><span style="color:#B392F0;">   </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">fs</span><span style="color:#B392F0;">.readFileSync(</span><span style="color:#79B8FF;">path</span><span style="color:#B392F0;">.resolve(</span><span style="color:#FFAB70;">&#39;../my-dir&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> filename)</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;utf-8&#39;</span><span style="color:#B392F0;">);</span></span>
<span class="line"><span style="color:#F97583;">+</span><span style="color:#B392F0;"> });</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="frommapfilesource" tabindex="-1">fromMapFileSource <a class="header-anchor" href="#frommapfilesource" aria-label="Permalink to &quot;fromMapFileSource&quot;">​</a></h3><p>fromMapFileSource(source, readMap)函数会在文件中查找最后一个sourcemap注释，如果找到则返回源映射转换器，否则返回null。</p><p>readMap必须是一个函数，该函数接收源映射文件名作为参数，并返回源映射的字符串或缓冲区（如果是同步读取）或包含源映射字符串或缓冲区的Promise（如果是异步读取）。</p><p>如果readMap不返回Promise，fromMapFileSource将同步返回源映射转换器。</p><p>如果readMap返回Promise，则fromMapFileSource也将返回Promise。该Promise将被解析为源映射转换器或被拒绝为一个错误。</p><p>在 <code>fromMapFileSource</code> 函数中，<code>source</code> 是指包含源映射信息的文件的源代码。该函数的目的是在源代码中查找最后一个 sourcemap 注释，并从 <code>readMap</code> 函数中读取与注释中指定的源映射信息相对应的源映射文件，然后返回一个源映射转换器，以便后续操作源映射信息。</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">code</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;">try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#61AFEF;">map</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#E5C07B;">convertSourceMap</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fromSource</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">code</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">||</span></span>
<span class="line"><span style="color:#ABB2BF;">          (</span><span style="color:#C678DD;">await</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">convertSourceMap</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fromMapFileSource</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E06C75;">code</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#61AFEF;">createConvertSourceMapReadMap</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">file</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">          ))</span></span>
<span class="line"><span style="color:#ABB2BF;">        )?.</span><span style="color:#61AFEF;">toObject</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E06C75;">code</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">code</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">replace</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">convertSourceMap</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">mapFileCommentRegex</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">blankReplacer</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">      } </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">e</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">logger</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">warn</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`Failed to load source map for </span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">url</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">.\`</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#E06C75;">timestamp</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        })</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light"><code><span class="line"><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (code) {</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#F97583;">try</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">        map </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> (</span></span>
<span class="line"><span style="color:#B392F0;">          </span><span style="color:#79B8FF;">convertSourceMap</span><span style="color:#B392F0;">.fromSource(code) </span><span style="color:#F97583;">||</span></span>
<span class="line"><span style="color:#B392F0;">          (</span><span style="color:#F97583;">await</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">convertSourceMap</span><span style="color:#B392F0;">.fromMapFileSource(</span></span>
<span class="line"><span style="color:#B392F0;">            code</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">            createConvertSourceMapReadMap(file)</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">          ))</span></span>
<span class="line"><span style="color:#B392F0;">        )?.toObject()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">        code </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">code</span><span style="color:#B392F0;">.replace(</span><span style="color:#79B8FF;">convertSourceMap</span><span style="color:#B392F0;">.mapFileCommentRegex</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> blankReplacer)</span></span>
<span class="line"><span style="color:#B392F0;">      } </span><span style="color:#F97583;">catch</span><span style="color:#B392F0;"> (e) {</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#79B8FF;">logger</span><span style="color:#B392F0;">.warn(</span><span style="color:#FFAB70;">\`Failed to load source map for </span><span style="color:#F97583;">\${</span><span style="color:#B392F0;">url</span><span style="color:#F97583;">}</span><span style="color:#FFAB70;">.\`</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">          timestamp</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">true</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">        })</span></span>
<span class="line"><span style="color:#B392F0;">      }</span></span>
<span class="line"><span style="color:#B392F0;">    }</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>这段代码首先判断变量 <code>code</code> 是否有值，如果有，则尝试从该代码中提取源映射信息并将其转换为 JavaScript 对象。</p><p>具体而言，它会先尝试调用 <code>convertSourceMap.fromSource(code)</code> 方法，该方法会尝试从 <code>code</code> 中提取源映射信息，如果提取成功，则返回一个 <code>SourceMapGenerator</code> 对象。如果提取失败，则继续尝试调用 <code>convertSourceMap.fromMapFileSource(code, createConvertSourceMapReadMap(file))</code> 方法，该方法会尝试从 <code>code</code> 中提取映射文件的路径，并读取该路径下的映射文件，将其解析为 JavaScript 对象并返回。如果两个方法都无法提取源映射信息，则变量 <code>map</code> 的值为 <code>undefined</code>。</p><p>如果成功提取了源映射信息并将其转换为 JavaScript 对象，则变量 <code>map</code> 的值为该对象。此外，该代码还使用正则表达式 <code>convertSourceMap.mapFileCommentRegex</code> 在 <code>code</code> 中查找源映射文件的注释，并使用 <code>blankReplacer</code> 替换注释的内容，从而将 <code>code</code> 中的源映射信息删除。</p><p>如果提取源映射信息的过程中发生错误，则会捕获该错误并记录一个警告日志，告知用户加载源映射信息失败</p><h2 id="createconvertsourcemapreadmap函数" tabindex="-1">createConvertSourceMapReadMap函数 <a class="header-anchor" href="#createconvertsourcemapreadmap函数" aria-label="Permalink to &quot;createConvertSourceMapReadMap函数&quot;">​</a></h2><p><code>convertSourceMap.fromMapFileSource()</code> 是 <code>convert-source-map</code> 库提供的一个方法，用于将源映射文件的内容转换为 JavaScript 对象或字符串。这个方法接收两个参数：</p><ul><li><code>code</code>: 要解析的源映射文件的内容。</li><li><code>readmap</code>: 一个函数，用于读取源映射文件的内容。该函数接收一个参数 <code>filename</code>，表示要读取的文件路径，返回一个 Promise，该 Promise 的解析值为源映射文件的内容。</li></ul><p>在解析源映射文件的过程中，<code>convertSourceMap.fromMapFileSource()</code> 方法会使用 <code>readmap</code> 函数读取源映射文件的内容，并将其转换为 JavaScript 对象或字符串。</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#E5C07B;">convertSourceMap</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fromMapFileSource</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E06C75;">code</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#61AFEF;">createConvertSourceMapReadMap</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">file</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">          )</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light"><code><span class="line"><span style="color:#79B8FF;">convertSourceMap</span><span style="color:#B392F0;">.fromMapFileSource(</span></span>
<span class="line"><span style="color:#B392F0;">            code</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">            createConvertSourceMapReadMap(file)</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">          )</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>readmap函数读取指定文件名的文件内容并以 UTF-8 编码格式返回该文件的文本内容</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">createConvertSourceMapReadMap</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">originalFileName</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">filename</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">readFile</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">dirname</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">originalFileName</span><span style="color:#ABB2BF;">), </span><span style="color:#E06C75;">filename</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#98C379;">&#39;utf-8&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    )</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> createConvertSourceMapReadMap(originalFileName</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> (filename</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">fs</span><span style="color:#B392F0;">.readFile(</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#79B8FF;">path</span><span style="color:#B392F0;">.resolve(</span><span style="color:#79B8FF;">path</span><span style="color:#B392F0;">.dirname(originalFileName)</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> filename)</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#FFAB70;">&#39;utf-8&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">    )</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="path-dirname" tabindex="-1">path.dirname <a class="header-anchor" href="#path-dirname" aria-label="Permalink to &quot;path.dirname&quot;">​</a></h2><p><code>path.dirname()</code> 是 Node.js 中的一个函数，用于返回指定文件路径中的目录名部分，即去掉文件名和扩展名后的部分。这个函数接受一个字符串参数，表示文件路径，返回该文件路径中的目录名部分。</p><p>例如，如果文件路径为 <code>/foo/bar/index.js</code>，那么 <code>path.dirname(&#39;/foo/bar/index.js&#39;)</code> 将返回 <code>/foo/bar</code>。这个函数可以用于拼接文件路径，如 <code>path.resolve(path.dirname(originalFileName), filename)</code>，可以将原始文件的目录名与指定的文件名 <code>filename</code> 拼接成完整的文件路径。在实际应用中，<code>path.dirname()</code> 可以用于获取文件所在的目录路径，进而读取该目录下的其他文件。</p><h2 id="path-resolve" tabindex="-1">path.resolve <a class="header-anchor" href="#path-resolve" aria-label="Permalink to &quot;path.resolve&quot;">​</a></h2><p><code>path.resolve()</code> 是 Node.js 中的一个函数，用于将路径或路径片段拼接成完整的路径。</p><p>这个函数接受一到多个路径片段作为参数，并以操作系统特定的路径分隔符作为分隔符将这些路径片段连接起来，返回拼接后的完整路径字符串。如果参数中包含绝对路径（以 <code>/</code> 或 Windows 系统的盘符开头），则之前的路径都将被忽略，只返回最后一个绝对路径。</p><p>例如，在 Unix 系统中，<code>path.resolve(&#39;/foo/bar&#39;, &#39;./baz&#39;)</code> 返回 <code>/foo/bar/baz</code>，而 <code>path.resolve(&#39;/foo/bar&#39;, &#39;/tmp/file/&#39;)</code> 返回 <code>/tmp/file</code>。在 Windows 系统中，<code>path.resolve(&#39;C:/foo/bar&#39;, &#39;./baz&#39;)</code> 返回 <code>C:\\foo\\bar\\baz</code>，而 <code>path.resolve(&#39;C:/foo/bar&#39;, &#39;D:/tmp/file/&#39;)</code> 返回 <code>D:\\tmp\\file</code>。</p><p>在实际应用中，<code>path.resolve()</code> 可以用于拼接文件路径、构建绝对路径等场景。</p><h2 id="fs-readfile" tabindex="-1">fs.readFile <a class="header-anchor" href="#fs-readfile" aria-label="Permalink to &quot;fs.readFile&quot;">​</a></h2><p><code>fs.readFile()</code> 是 Node.js 中的一个函数，用于异步地读取文件的内容。它接受三个参数：</p><ul><li><code>path</code>：要读取的文件路径。</li><li><code>options</code>：可选参数，指定读取文件时的选项，例如编码格式、读取起始位置等。</li><li><code>callback</code>：回调函数，用于处理读取结果。该函数接受两个参数，第一个参数为错误对象，第二个参数为读取到的文件内容。</li></ul><p>当文件读取完成后，<code>fs.readFile()</code> 会调用回调函数，将读取到的文件内容传递给回调函数的第二个参数。如果读取文件时出现错误，例如文件不存在、无读取权限等，则 <code>fs.readFile()</code> 会将错误对象传递给回调函数的第一个参数。</p><p>例如，下面的代码读取指定路径的文件内容，并将读取到的内容输出到控制台上：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;fs&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">readFile</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;/path/to/file.txt&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;utf-8&#39;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">data</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">err</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">throw</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">err</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">fs</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> require(</span><span style="color:#FFAB70;">&#39;fs&#39;</span><span style="color:#B392F0;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">fs</span><span style="color:#B392F0;">.readFile(</span><span style="color:#FFAB70;">&#39;/path/to/file.txt&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;utf-8&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> (err</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> data) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (err) </span><span style="color:#F97583;">throw</span><span style="color:#B392F0;"> err;</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(data);</span></span>
<span class="line"><span style="color:#B392F0;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>若没有指定回调函数，则该函数返回一个 Promise 对象，可以通过 Promise 的 <code>then()</code> 方法来处理文件读取结果</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;fs&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">readFile</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;/path/to/file.txt&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;utf-8&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  .</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">data</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 输出读取到的文件内容</span></span>
<span class="line"><span style="color:#ABB2BF;">  })</span></span>
<span class="line"><span style="color:#ABB2BF;">  .</span><span style="color:#61AFEF;">catch</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">error</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">err</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 输出读取文件时的错误信息</span></span>
<span class="line"><span style="color:#ABB2BF;">  });</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">fs</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> require(</span><span style="color:#FFAB70;">&#39;fs&#39;</span><span style="color:#B392F0;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">fs</span><span style="color:#B392F0;">.readFile(</span><span style="color:#FFAB70;">&#39;/path/to/file.txt&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;utf-8&#39;</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">  .then(data </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(data); </span><span style="color:#6B737C;">// 输出读取到的文件内容</span></span>
<span class="line"><span style="color:#B392F0;">  })</span></span>
<span class="line"><span style="color:#B392F0;">  .catch(err </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.error(err); </span><span style="color:#6B737C;">// 输出读取文件时的错误信息</span></span>
<span class="line"><span style="color:#B392F0;">  });</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,46),e=[o];function c(r,t,B,y,F,i){return n(),a("div",null,e)}const A=s(l,[["render",c]]);export{u as __pageData,A as default};
